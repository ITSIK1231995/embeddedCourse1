
002SampleApp.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001a8  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00001454  080001b0  080001b0  000101b0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000000f4  08001604  08001604  00011604  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  080016f8  080016f8  000200ac  2**0
                  CONTENTS
  4 .ARM          00000000  080016f8  080016f8  000200ac  2**0
                  CONTENTS
  5 .preinit_array 00000000  080016f8  080016f8  000200ac  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080016f8  080016f8  000116f8  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  080016fc  080016fc  000116fc  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         000000ac  20000000  08001700  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000002c  200000ac  080017ac  000200ac  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  200000d8  080017ac  000200d8  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  000200ac  2**0
                  CONTENTS, READONLY
 12 .debug_info   000022b5  00000000  00000000  000200dc  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_abbrev 0000065e  00000000  00000000  00022391  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_aranges 00000140  00000000  00000000  000229f0  2**3
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_ranges 00000108  00000000  00000000  00022b30  2**3
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_macro  00002836  00000000  00000000  00022c38  2**0
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_line   00001396  00000000  00000000  0002546e  2**0
                  CONTENTS, READONLY, DEBUGGING
 18 .debug_str    00008857  00000000  00000000  00026804  2**0
                  CONTENTS, READONLY, DEBUGGING
 19 .comment      0000007b  00000000  00000000  0002f05b  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000c44  00000000  00000000  0002f0d8  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

080001b0 <__do_global_dtors_aux>:
 80001b0:	b510      	push	{r4, lr}
 80001b2:	4c05      	ldr	r4, [pc, #20]	; (80001c8 <__do_global_dtors_aux+0x18>)
 80001b4:	7823      	ldrb	r3, [r4, #0]
 80001b6:	b933      	cbnz	r3, 80001c6 <__do_global_dtors_aux+0x16>
 80001b8:	4b04      	ldr	r3, [pc, #16]	; (80001cc <__do_global_dtors_aux+0x1c>)
 80001ba:	b113      	cbz	r3, 80001c2 <__do_global_dtors_aux+0x12>
 80001bc:	4804      	ldr	r0, [pc, #16]	; (80001d0 <__do_global_dtors_aux+0x20>)
 80001be:	f3af 8000 	nop.w
 80001c2:	2301      	movs	r3, #1
 80001c4:	7023      	strb	r3, [r4, #0]
 80001c6:	bd10      	pop	{r4, pc}
 80001c8:	200000ac 	.word	0x200000ac
 80001cc:	00000000 	.word	0x00000000
 80001d0:	080015ec 	.word	0x080015ec

080001d4 <frame_dummy>:
 80001d4:	b508      	push	{r3, lr}
 80001d6:	4b03      	ldr	r3, [pc, #12]	; (80001e4 <frame_dummy+0x10>)
 80001d8:	b11b      	cbz	r3, 80001e2 <frame_dummy+0xe>
 80001da:	4903      	ldr	r1, [pc, #12]	; (80001e8 <frame_dummy+0x14>)
 80001dc:	4803      	ldr	r0, [pc, #12]	; (80001ec <frame_dummy+0x18>)
 80001de:	f3af 8000 	nop.w
 80001e2:	bd08      	pop	{r3, pc}
 80001e4:	00000000 	.word	0x00000000
 80001e8:	200000b0 	.word	0x200000b0
 80001ec:	080015ec 	.word	0x080015ec

080001f0 <memchr>:
 80001f0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80001f4:	2a10      	cmp	r2, #16
 80001f6:	db2b      	blt.n	8000250 <memchr+0x60>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	d008      	beq.n	8000210 <memchr+0x20>
 80001fe:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000202:	3a01      	subs	r2, #1
 8000204:	428b      	cmp	r3, r1
 8000206:	d02d      	beq.n	8000264 <memchr+0x74>
 8000208:	f010 0f07 	tst.w	r0, #7
 800020c:	b342      	cbz	r2, 8000260 <memchr+0x70>
 800020e:	d1f6      	bne.n	80001fe <memchr+0xe>
 8000210:	b4f0      	push	{r4, r5, r6, r7}
 8000212:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000216:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800021a:	f022 0407 	bic.w	r4, r2, #7
 800021e:	f07f 0700 	mvns.w	r7, #0
 8000222:	2300      	movs	r3, #0
 8000224:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000228:	3c08      	subs	r4, #8
 800022a:	ea85 0501 	eor.w	r5, r5, r1
 800022e:	ea86 0601 	eor.w	r6, r6, r1
 8000232:	fa85 f547 	uadd8	r5, r5, r7
 8000236:	faa3 f587 	sel	r5, r3, r7
 800023a:	fa86 f647 	uadd8	r6, r6, r7
 800023e:	faa5 f687 	sel	r6, r5, r7
 8000242:	b98e      	cbnz	r6, 8000268 <memchr+0x78>
 8000244:	d1ee      	bne.n	8000224 <memchr+0x34>
 8000246:	bcf0      	pop	{r4, r5, r6, r7}
 8000248:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800024c:	f002 0207 	and.w	r2, r2, #7
 8000250:	b132      	cbz	r2, 8000260 <memchr+0x70>
 8000252:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000256:	3a01      	subs	r2, #1
 8000258:	ea83 0301 	eor.w	r3, r3, r1
 800025c:	b113      	cbz	r3, 8000264 <memchr+0x74>
 800025e:	d1f8      	bne.n	8000252 <memchr+0x62>
 8000260:	2000      	movs	r0, #0
 8000262:	4770      	bx	lr
 8000264:	3801      	subs	r0, #1
 8000266:	4770      	bx	lr
 8000268:	2d00      	cmp	r5, #0
 800026a:	bf06      	itte	eq
 800026c:	4635      	moveq	r5, r6
 800026e:	3803      	subeq	r0, #3
 8000270:	3807      	subne	r0, #7
 8000272:	f015 0f01 	tst.w	r5, #1
 8000276:	d107      	bne.n	8000288 <memchr+0x98>
 8000278:	3001      	adds	r0, #1
 800027a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800027e:	bf02      	ittt	eq
 8000280:	3001      	addeq	r0, #1
 8000282:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000286:	3001      	addeq	r0, #1
 8000288:	bcf0      	pop	{r4, r5, r6, r7}
 800028a:	3801      	subs	r0, #1
 800028c:	4770      	bx	lr
 800028e:	bf00      	nop

08000290 <array_fill_numbers>:
int numbers[] = { 456,345,678,567,890,456,3456,123,765,456,896,456,678,987,000,145,90};

int  someData = 90;

void array_fill_numbers(int pNumbers[], unsigned int len)
{
 8000290:	b580      	push	{r7, lr}
 8000292:	b084      	sub	sp, #16
 8000294:	af00      	add	r7, sp, #0
 8000296:	6078      	str	r0, [r7, #4]
 8000298:	6039      	str	r1, [r7, #0]

    for ( unsigned int i = 0 ; i < len ; i++)
 800029a:	2300      	movs	r3, #0
 800029c:	60fb      	str	r3, [r7, #12]
 800029e:	e015      	b.n	80002cc <array_fill_numbers+0x3c>
    {
        pNumbers[i] = rand() % 1000;
 80002a0:	f000 fa66 	bl	8000770 <rand>
 80002a4:	4602      	mov	r2, r0
 80002a6:	68fb      	ldr	r3, [r7, #12]
 80002a8:	009b      	lsls	r3, r3, #2
 80002aa:	6879      	ldr	r1, [r7, #4]
 80002ac:	4419      	add	r1, r3
 80002ae:	4b0b      	ldr	r3, [pc, #44]	; (80002dc <array_fill_numbers+0x4c>)
 80002b0:	fb83 0302 	smull	r0, r3, r3, r2
 80002b4:	1198      	asrs	r0, r3, #6
 80002b6:	17d3      	asrs	r3, r2, #31
 80002b8:	1ac3      	subs	r3, r0, r3
 80002ba:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 80002be:	fb00 f303 	mul.w	r3, r0, r3
 80002c2:	1ad3      	subs	r3, r2, r3
 80002c4:	600b      	str	r3, [r1, #0]
    for ( unsigned int i = 0 ; i < len ; i++)
 80002c6:	68fb      	ldr	r3, [r7, #12]
 80002c8:	3301      	adds	r3, #1
 80002ca:	60fb      	str	r3, [r7, #12]
 80002cc:	68fa      	ldr	r2, [r7, #12]
 80002ce:	683b      	ldr	r3, [r7, #0]
 80002d0:	429a      	cmp	r2, r3
 80002d2:	d3e5      	bcc.n	80002a0 <array_fill_numbers+0x10>
    }

}
 80002d4:	bf00      	nop
 80002d6:	3710      	adds	r7, #16
 80002d8:	46bd      	mov	sp, r7
 80002da:	bd80      	pop	{r7, pc}
 80002dc:	10624dd3 	.word	0x10624dd3

080002e0 <display_numbers>:

void display_numbers(int *pNumbers, unsigned int len, char *pMessage)
{
 80002e0:	b580      	push	{r7, lr}
 80002e2:	b086      	sub	sp, #24
 80002e4:	af00      	add	r7, sp, #0
 80002e6:	60f8      	str	r0, [r7, #12]
 80002e8:	60b9      	str	r1, [r7, #8]
 80002ea:	607a      	str	r2, [r7, #4]
    printf("%s",pMessage);
 80002ec:	6879      	ldr	r1, [r7, #4]
 80002ee:	480e      	ldr	r0, [pc, #56]	; (8000328 <display_numbers+0x48>)
 80002f0:	f000 fa12 	bl	8000718 <iprintf>

    for (unsigned i = 0 ; i < len ; i++)
 80002f4:	2300      	movs	r3, #0
 80002f6:	617b      	str	r3, [r7, #20]
 80002f8:	e00b      	b.n	8000312 <display_numbers+0x32>
    {
        printf("%5d  ",pNumbers[i]);
 80002fa:	697b      	ldr	r3, [r7, #20]
 80002fc:	009b      	lsls	r3, r3, #2
 80002fe:	68fa      	ldr	r2, [r7, #12]
 8000300:	4413      	add	r3, r2
 8000302:	681b      	ldr	r3, [r3, #0]
 8000304:	4619      	mov	r1, r3
 8000306:	4809      	ldr	r0, [pc, #36]	; (800032c <display_numbers+0x4c>)
 8000308:	f000 fa06 	bl	8000718 <iprintf>
    for (unsigned i = 0 ; i < len ; i++)
 800030c:	697b      	ldr	r3, [r7, #20]
 800030e:	3301      	adds	r3, #1
 8000310:	617b      	str	r3, [r7, #20]
 8000312:	697a      	ldr	r2, [r7, #20]
 8000314:	68bb      	ldr	r3, [r7, #8]
 8000316:	429a      	cmp	r2, r3
 8000318:	d3ef      	bcc.n	80002fa <display_numbers+0x1a>
    }

    printf("\n");
 800031a:	200a      	movs	r0, #10
 800031c:	f000 fa14 	bl	8000748 <putchar>
}
 8000320:	bf00      	nop
 8000322:	3718      	adds	r7, #24
 8000324:	46bd      	mov	sp, r7
 8000326:	bd80      	pop	{r7, pc}
 8000328:	08001604 	.word	0x08001604
 800032c:	08001608 	.word	0x08001608

08000330 <swap_numbers>:


void swap_numbers(int *x,int *y)
{
 8000330:	b480      	push	{r7}
 8000332:	b085      	sub	sp, #20
 8000334:	af00      	add	r7, sp, #0
 8000336:	6078      	str	r0, [r7, #4]
 8000338:	6039      	str	r1, [r7, #0]
     int temp=*x;
 800033a:	687b      	ldr	r3, [r7, #4]
 800033c:	681b      	ldr	r3, [r3, #0]
 800033e:	60fb      	str	r3, [r7, #12]
     *x=*y;
 8000340:	683b      	ldr	r3, [r7, #0]
 8000342:	681a      	ldr	r2, [r3, #0]
 8000344:	687b      	ldr	r3, [r7, #4]
 8000346:	601a      	str	r2, [r3, #0]
     *y=temp;
 8000348:	683b      	ldr	r3, [r7, #0]
 800034a:	68fa      	ldr	r2, [r7, #12]
 800034c:	601a      	str	r2, [r3, #0]
     void (*jump_addr) (void);
     jump_addr = (void*)0x20000009;
     jump_addr();
#endif

     someData = 10;
 800034e:	4b04      	ldr	r3, [pc, #16]	; (8000360 <swap_numbers+0x30>)
 8000350:	220a      	movs	r2, #10
 8000352:	601a      	str	r2, [r3, #0]
}
 8000354:	bf00      	nop
 8000356:	3714      	adds	r7, #20
 8000358:	46bd      	mov	sp, r7
 800035a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800035e:	4770      	bx	lr
 8000360:	20000044 	.word	0x20000044

08000364 <bubble_sort>:


void bubble_sort(int *pNumbers , unsigned int len)
{
 8000364:	b580      	push	{r7, lr}
 8000366:	b086      	sub	sp, #24
 8000368:	af00      	add	r7, sp, #0
 800036a:	6078      	str	r0, [r7, #4]
 800036c:	6039      	str	r1, [r7, #0]

    int i,j,flag=0;
 800036e:	2300      	movs	r3, #0
 8000370:	60fb      	str	r3, [r7, #12]

    for(i=0;i<len-1;i++)
 8000372:	2300      	movs	r3, #0
 8000374:	617b      	str	r3, [r7, #20]
 8000376:	e02f      	b.n	80003d8 <bubble_sort+0x74>
    {
        flag=0;
 8000378:	2300      	movs	r3, #0
 800037a:	60fb      	str	r3, [r7, #12]

        for(j=0;j<len-1-i;j++)
 800037c:	2300      	movs	r3, #0
 800037e:	613b      	str	r3, [r7, #16]
 8000380:	e01d      	b.n	80003be <bubble_sort+0x5a>
        {
            if(pNumbers[j] > pNumbers[j+1])
 8000382:	693b      	ldr	r3, [r7, #16]
 8000384:	009b      	lsls	r3, r3, #2
 8000386:	687a      	ldr	r2, [r7, #4]
 8000388:	4413      	add	r3, r2
 800038a:	681a      	ldr	r2, [r3, #0]
 800038c:	693b      	ldr	r3, [r7, #16]
 800038e:	3301      	adds	r3, #1
 8000390:	009b      	lsls	r3, r3, #2
 8000392:	6879      	ldr	r1, [r7, #4]
 8000394:	440b      	add	r3, r1
 8000396:	681b      	ldr	r3, [r3, #0]
 8000398:	429a      	cmp	r2, r3
 800039a:	dd0d      	ble.n	80003b8 <bubble_sort+0x54>
            {
                swap_numbers(&pNumbers[j],&pNumbers[j+1]);
 800039c:	693b      	ldr	r3, [r7, #16]
 800039e:	009b      	lsls	r3, r3, #2
 80003a0:	687a      	ldr	r2, [r7, #4]
 80003a2:	18d0      	adds	r0, r2, r3
 80003a4:	693b      	ldr	r3, [r7, #16]
 80003a6:	3301      	adds	r3, #1
 80003a8:	009b      	lsls	r3, r3, #2
 80003aa:	687a      	ldr	r2, [r7, #4]
 80003ac:	4413      	add	r3, r2
 80003ae:	4619      	mov	r1, r3
 80003b0:	f7ff ffbe 	bl	8000330 <swap_numbers>
                flag=1;
 80003b4:	2301      	movs	r3, #1
 80003b6:	60fb      	str	r3, [r7, #12]
        for(j=0;j<len-1-i;j++)
 80003b8:	693b      	ldr	r3, [r7, #16]
 80003ba:	3301      	adds	r3, #1
 80003bc:	613b      	str	r3, [r7, #16]
 80003be:	697b      	ldr	r3, [r7, #20]
 80003c0:	683a      	ldr	r2, [r7, #0]
 80003c2:	1ad3      	subs	r3, r2, r3
 80003c4:	1e5a      	subs	r2, r3, #1
 80003c6:	693b      	ldr	r3, [r7, #16]
 80003c8:	429a      	cmp	r2, r3
 80003ca:	d8da      	bhi.n	8000382 <bubble_sort+0x1e>
            }
        }

        if(flag==0)
 80003cc:	68fb      	ldr	r3, [r7, #12]
 80003ce:	2b00      	cmp	r3, #0
 80003d0:	d008      	beq.n	80003e4 <bubble_sort+0x80>
    for(i=0;i<len-1;i++)
 80003d2:	697b      	ldr	r3, [r7, #20]
 80003d4:	3301      	adds	r3, #1
 80003d6:	617b      	str	r3, [r7, #20]
 80003d8:	683b      	ldr	r3, [r7, #0]
 80003da:	1e5a      	subs	r2, r3, #1
 80003dc:	697b      	ldr	r3, [r7, #20]
 80003de:	429a      	cmp	r2, r3
 80003e0:	d8ca      	bhi.n	8000378 <bubble_sort+0x14>
            break;
    }
}
 80003e2:	e000      	b.n	80003e6 <bubble_sort+0x82>
            break;
 80003e4:	bf00      	nop
}
 80003e6:	bf00      	nop
 80003e8:	3718      	adds	r7, #24
 80003ea:	46bd      	mov	sp, r7
 80003ec:	bd80      	pop	{r7, pc}

080003ee <insertion_sort>:

void insertion_sort(int *pNumbers , unsigned int len)
{
 80003ee:	b480      	push	{r7}
 80003f0:	b087      	sub	sp, #28
 80003f2:	af00      	add	r7, sp, #0
 80003f4:	6078      	str	r0, [r7, #4]
 80003f6:	6039      	str	r1, [r7, #0]

     int i,j,num;

     for(i=1 ; i<len ; i++)
 80003f8:	2301      	movs	r3, #1
 80003fa:	617b      	str	r3, [r7, #20]
 80003fc:	e02c      	b.n	8000458 <insertion_sort+0x6a>
     {
         j=i-1;
 80003fe:	697b      	ldr	r3, [r7, #20]
 8000400:	3b01      	subs	r3, #1
 8000402:	613b      	str	r3, [r7, #16]

         num = pNumbers[i];
 8000404:	697b      	ldr	r3, [r7, #20]
 8000406:	009b      	lsls	r3, r3, #2
 8000408:	687a      	ldr	r2, [r7, #4]
 800040a:	4413      	add	r3, r2
 800040c:	681b      	ldr	r3, [r3, #0]
 800040e:	60fb      	str	r3, [r7, #12]

         while( (j>-1) && (pNumbers[j] > num) )
 8000410:	e00d      	b.n	800042e <insertion_sort+0x40>
         {
             pNumbers[j+1] = pNumbers[j];
 8000412:	693b      	ldr	r3, [r7, #16]
 8000414:	009b      	lsls	r3, r3, #2
 8000416:	687a      	ldr	r2, [r7, #4]
 8000418:	441a      	add	r2, r3
 800041a:	693b      	ldr	r3, [r7, #16]
 800041c:	3301      	adds	r3, #1
 800041e:	009b      	lsls	r3, r3, #2
 8000420:	6879      	ldr	r1, [r7, #4]
 8000422:	440b      	add	r3, r1
 8000424:	6812      	ldr	r2, [r2, #0]
 8000426:	601a      	str	r2, [r3, #0]
             j--;
 8000428:	693b      	ldr	r3, [r7, #16]
 800042a:	3b01      	subs	r3, #1
 800042c:	613b      	str	r3, [r7, #16]
         while( (j>-1) && (pNumbers[j] > num) )
 800042e:	693b      	ldr	r3, [r7, #16]
 8000430:	2b00      	cmp	r3, #0
 8000432:	db07      	blt.n	8000444 <insertion_sort+0x56>
 8000434:	693b      	ldr	r3, [r7, #16]
 8000436:	009b      	lsls	r3, r3, #2
 8000438:	687a      	ldr	r2, [r7, #4]
 800043a:	4413      	add	r3, r2
 800043c:	681b      	ldr	r3, [r3, #0]
 800043e:	68fa      	ldr	r2, [r7, #12]
 8000440:	429a      	cmp	r2, r3
 8000442:	dbe6      	blt.n	8000412 <insertion_sort+0x24>
         }

         pNumbers[j+1]=num;
 8000444:	693b      	ldr	r3, [r7, #16]
 8000446:	3301      	adds	r3, #1
 8000448:	009b      	lsls	r3, r3, #2
 800044a:	687a      	ldr	r2, [r7, #4]
 800044c:	4413      	add	r3, r2
 800044e:	68fa      	ldr	r2, [r7, #12]
 8000450:	601a      	str	r2, [r3, #0]
     for(i=1 ; i<len ; i++)
 8000452:	697b      	ldr	r3, [r7, #20]
 8000454:	3301      	adds	r3, #1
 8000456:	617b      	str	r3, [r7, #20]
 8000458:	697b      	ldr	r3, [r7, #20]
 800045a:	683a      	ldr	r2, [r7, #0]
 800045c:	429a      	cmp	r2, r3
 800045e:	d8ce      	bhi.n	80003fe <insertion_sort+0x10>
     }


}
 8000460:	bf00      	nop
 8000462:	371c      	adds	r7, #28
 8000464:	46bd      	mov	sp, r7
 8000466:	f85d 7b04 	ldr.w	r7, [sp], #4
 800046a:	4770      	bx	lr

0800046c <main>:



int main()
{
 800046c:	b580      	push	{r7, lr}
 800046e:	b082      	sub	sp, #8
 8000470:	af00      	add	r7, sp, #0

    unsigned int len = sizeof(numbers)/sizeof(int);
 8000472:	2311      	movs	r3, #17
 8000474:	607b      	str	r3, [r7, #4]

    array_fill_numbers(numbers,len);
 8000476:	6879      	ldr	r1, [r7, #4]
 8000478:	4813      	ldr	r0, [pc, #76]	; (80004c8 <main+0x5c>)
 800047a:	f7ff ff09 	bl	8000290 <array_fill_numbers>

    display_numbers(numbers,len,"B-unsorted array :");
 800047e:	4a13      	ldr	r2, [pc, #76]	; (80004cc <main+0x60>)
 8000480:	6879      	ldr	r1, [r7, #4]
 8000482:	4811      	ldr	r0, [pc, #68]	; (80004c8 <main+0x5c>)
 8000484:	f7ff ff2c 	bl	80002e0 <display_numbers>

    bubble_sort(numbers,len);
 8000488:	6879      	ldr	r1, [r7, #4]
 800048a:	480f      	ldr	r0, [pc, #60]	; (80004c8 <main+0x5c>)
 800048c:	f7ff ff6a 	bl	8000364 <bubble_sort>

    display_numbers(numbers,len,"B-sorted array   :");
 8000490:	4a0f      	ldr	r2, [pc, #60]	; (80004d0 <main+0x64>)
 8000492:	6879      	ldr	r1, [r7, #4]
 8000494:	480c      	ldr	r0, [pc, #48]	; (80004c8 <main+0x5c>)
 8000496:	f7ff ff23 	bl	80002e0 <display_numbers>

    array_fill_numbers(numbers,len);
 800049a:	6879      	ldr	r1, [r7, #4]
 800049c:	480a      	ldr	r0, [pc, #40]	; (80004c8 <main+0x5c>)
 800049e:	f7ff fef7 	bl	8000290 <array_fill_numbers>

    display_numbers(numbers,len,"I-unsorted array :");
 80004a2:	4a0c      	ldr	r2, [pc, #48]	; (80004d4 <main+0x68>)
 80004a4:	6879      	ldr	r1, [r7, #4]
 80004a6:	4808      	ldr	r0, [pc, #32]	; (80004c8 <main+0x5c>)
 80004a8:	f7ff ff1a 	bl	80002e0 <display_numbers>

    insertion_sort(numbers,len);
 80004ac:	6879      	ldr	r1, [r7, #4]
 80004ae:	4806      	ldr	r0, [pc, #24]	; (80004c8 <main+0x5c>)
 80004b0:	f7ff ff9d 	bl	80003ee <insertion_sort>

    display_numbers(numbers,len,"I-sorted array   :");
 80004b4:	4a08      	ldr	r2, [pc, #32]	; (80004d8 <main+0x6c>)
 80004b6:	6879      	ldr	r1, [r7, #4]
 80004b8:	4803      	ldr	r0, [pc, #12]	; (80004c8 <main+0x5c>)
 80004ba:	f7ff ff11 	bl	80002e0 <display_numbers>



    return 0;
 80004be:	2300      	movs	r3, #0
}
 80004c0:	4618      	mov	r0, r3
 80004c2:	3708      	adds	r7, #8
 80004c4:	46bd      	mov	sp, r7
 80004c6:	bd80      	pop	{r7, pc}
 80004c8:	20000000 	.word	0x20000000
 80004cc:	08001610 	.word	0x08001610
 80004d0:	08001624 	.word	0x08001624
 80004d4:	08001638 	.word	0x08001638
 80004d8:	0800164c 	.word	0x0800164c

080004dc <ITM_SendChar>:
/* ITM register addresses */
#define ITM_STIMULUS_PORT0   	*((volatile uint32_t*) 0xE0000000 )
#define ITM_TRACE_EN          	*((volatile uint32_t*) 0xE0000E00 )

void ITM_SendChar(uint8_t ch)
{
 80004dc:	b480      	push	{r7}
 80004de:	b083      	sub	sp, #12
 80004e0:	af00      	add	r7, sp, #0
 80004e2:	4603      	mov	r3, r0
 80004e4:	71fb      	strb	r3, [r7, #7]

	//Enable TRCENA
	DEMCR |= ( 1 << 24);
 80004e6:	4b0f      	ldr	r3, [pc, #60]	; (8000524 <ITM_SendChar+0x48>)
 80004e8:	681b      	ldr	r3, [r3, #0]
 80004ea:	4a0e      	ldr	r2, [pc, #56]	; (8000524 <ITM_SendChar+0x48>)
 80004ec:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 80004f0:	6013      	str	r3, [r2, #0]

	//enable stimulus port 0
	ITM_TRACE_EN |= ( 1 << 0);
 80004f2:	4b0d      	ldr	r3, [pc, #52]	; (8000528 <ITM_SendChar+0x4c>)
 80004f4:	681b      	ldr	r3, [r3, #0]
 80004f6:	4a0c      	ldr	r2, [pc, #48]	; (8000528 <ITM_SendChar+0x4c>)
 80004f8:	f043 0301 	orr.w	r3, r3, #1
 80004fc:	6013      	str	r3, [r2, #0]

	// read FIFO status in bit [0]:
	while(!(ITM_STIMULUS_PORT0 & 1));
 80004fe:	bf00      	nop
 8000500:	f04f 4360 	mov.w	r3, #3758096384	; 0xe0000000
 8000504:	681b      	ldr	r3, [r3, #0]
 8000506:	f003 0301 	and.w	r3, r3, #1
 800050a:	2b00      	cmp	r3, #0
 800050c:	d0f8      	beq.n	8000500 <ITM_SendChar+0x24>

	//Write to ITM stimulus port0
	ITM_STIMULUS_PORT0 = ch;
 800050e:	f04f 4260 	mov.w	r2, #3758096384	; 0xe0000000
 8000512:	79fb      	ldrb	r3, [r7, #7]
 8000514:	6013      	str	r3, [r2, #0]
}
 8000516:	bf00      	nop
 8000518:	370c      	adds	r7, #12
 800051a:	46bd      	mov	sp, r7
 800051c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000520:	4770      	bx	lr
 8000522:	bf00      	nop
 8000524:	e000edfc 	.word	0xe000edfc
 8000528:	e0000e00 	.word	0xe0000e00

0800052c <_read>:
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 800052c:	b580      	push	{r7, lr}
 800052e:	b086      	sub	sp, #24
 8000530:	af00      	add	r7, sp, #0
 8000532:	60f8      	str	r0, [r7, #12]
 8000534:	60b9      	str	r1, [r7, #8]
 8000536:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000538:	2300      	movs	r3, #0
 800053a:	617b      	str	r3, [r7, #20]
 800053c:	e00a      	b.n	8000554 <_read+0x28>
	{
		*ptr++ = __io_getchar();
 800053e:	f3af 8000 	nop.w
 8000542:	4601      	mov	r1, r0
 8000544:	68bb      	ldr	r3, [r7, #8]
 8000546:	1c5a      	adds	r2, r3, #1
 8000548:	60ba      	str	r2, [r7, #8]
 800054a:	b2ca      	uxtb	r2, r1
 800054c:	701a      	strb	r2, [r3, #0]
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800054e:	697b      	ldr	r3, [r7, #20]
 8000550:	3301      	adds	r3, #1
 8000552:	617b      	str	r3, [r7, #20]
 8000554:	697a      	ldr	r2, [r7, #20]
 8000556:	687b      	ldr	r3, [r7, #4]
 8000558:	429a      	cmp	r2, r3
 800055a:	dbf0      	blt.n	800053e <_read+0x12>
	}

return len;
 800055c:	687b      	ldr	r3, [r7, #4]
}
 800055e:	4618      	mov	r0, r3
 8000560:	3718      	adds	r7, #24
 8000562:	46bd      	mov	sp, r7
 8000564:	bd80      	pop	{r7, pc}

08000566 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8000566:	b580      	push	{r7, lr}
 8000568:	b086      	sub	sp, #24
 800056a:	af00      	add	r7, sp, #0
 800056c:	60f8      	str	r0, [r7, #12]
 800056e:	60b9      	str	r1, [r7, #8]
 8000570:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000572:	2300      	movs	r3, #0
 8000574:	617b      	str	r3, [r7, #20]
 8000576:	e009      	b.n	800058c <_write+0x26>
	{
//		__io_putchar(*ptr++);
		ITM_SendChar(*ptr++);
 8000578:	68bb      	ldr	r3, [r7, #8]
 800057a:	1c5a      	adds	r2, r3, #1
 800057c:	60ba      	str	r2, [r7, #8]
 800057e:	781b      	ldrb	r3, [r3, #0]
 8000580:	4618      	mov	r0, r3
 8000582:	f7ff ffab 	bl	80004dc <ITM_SendChar>
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000586:	697b      	ldr	r3, [r7, #20]
 8000588:	3301      	adds	r3, #1
 800058a:	617b      	str	r3, [r7, #20]
 800058c:	697a      	ldr	r2, [r7, #20]
 800058e:	687b      	ldr	r3, [r7, #4]
 8000590:	429a      	cmp	r2, r3
 8000592:	dbf1      	blt.n	8000578 <_write+0x12>
	}
	return len;
 8000594:	687b      	ldr	r3, [r7, #4]
}
 8000596:	4618      	mov	r0, r3
 8000598:	3718      	adds	r7, #24
 800059a:	46bd      	mov	sp, r7
 800059c:	bd80      	pop	{r7, pc}

0800059e <_close>:

int _close(int file)
{
 800059e:	b480      	push	{r7}
 80005a0:	b083      	sub	sp, #12
 80005a2:	af00      	add	r7, sp, #0
 80005a4:	6078      	str	r0, [r7, #4]
	return -1;
 80005a6:	f04f 33ff 	mov.w	r3, #4294967295
}
 80005aa:	4618      	mov	r0, r3
 80005ac:	370c      	adds	r7, #12
 80005ae:	46bd      	mov	sp, r7
 80005b0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80005b4:	4770      	bx	lr

080005b6 <_fstat>:


int _fstat(int file, struct stat *st)
{
 80005b6:	b480      	push	{r7}
 80005b8:	b083      	sub	sp, #12
 80005ba:	af00      	add	r7, sp, #0
 80005bc:	6078      	str	r0, [r7, #4]
 80005be:	6039      	str	r1, [r7, #0]
	st->st_mode = S_IFCHR;
 80005c0:	683b      	ldr	r3, [r7, #0]
 80005c2:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 80005c6:	605a      	str	r2, [r3, #4]
	return 0;
 80005c8:	2300      	movs	r3, #0
}
 80005ca:	4618      	mov	r0, r3
 80005cc:	370c      	adds	r7, #12
 80005ce:	46bd      	mov	sp, r7
 80005d0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80005d4:	4770      	bx	lr

080005d6 <_isatty>:

int _isatty(int file)
{
 80005d6:	b480      	push	{r7}
 80005d8:	b083      	sub	sp, #12
 80005da:	af00      	add	r7, sp, #0
 80005dc:	6078      	str	r0, [r7, #4]
	return 1;
 80005de:	2301      	movs	r3, #1
}
 80005e0:	4618      	mov	r0, r3
 80005e2:	370c      	adds	r7, #12
 80005e4:	46bd      	mov	sp, r7
 80005e6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80005ea:	4770      	bx	lr

080005ec <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 80005ec:	b480      	push	{r7}
 80005ee:	b085      	sub	sp, #20
 80005f0:	af00      	add	r7, sp, #0
 80005f2:	60f8      	str	r0, [r7, #12]
 80005f4:	60b9      	str	r1, [r7, #8]
 80005f6:	607a      	str	r2, [r7, #4]
	return 0;
 80005f8:	2300      	movs	r3, #0
}
 80005fa:	4618      	mov	r0, r3
 80005fc:	3714      	adds	r7, #20
 80005fe:	46bd      	mov	sp, r7
 8000600:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000604:	4770      	bx	lr
	...

08000608 <_sbrk>:
/**
 _sbrk
 Increase program data space. Malloc and related functions depend on this
**/
caddr_t _sbrk(int incr)
{
 8000608:	b580      	push	{r7, lr}
 800060a:	b084      	sub	sp, #16
 800060c:	af00      	add	r7, sp, #0
 800060e:	6078      	str	r0, [r7, #4]
	extern char end asm("end");
	static char *heap_end;
	char *prev_heap_end;

	if (heap_end == 0)
 8000610:	4b11      	ldr	r3, [pc, #68]	; (8000658 <_sbrk+0x50>)
 8000612:	681b      	ldr	r3, [r3, #0]
 8000614:	2b00      	cmp	r3, #0
 8000616:	d102      	bne.n	800061e <_sbrk+0x16>
		heap_end = &end;
 8000618:	4b0f      	ldr	r3, [pc, #60]	; (8000658 <_sbrk+0x50>)
 800061a:	4a10      	ldr	r2, [pc, #64]	; (800065c <_sbrk+0x54>)
 800061c:	601a      	str	r2, [r3, #0]

	prev_heap_end = heap_end;
 800061e:	4b0e      	ldr	r3, [pc, #56]	; (8000658 <_sbrk+0x50>)
 8000620:	681b      	ldr	r3, [r3, #0]
 8000622:	60fb      	str	r3, [r7, #12]
	if (heap_end + incr > stack_ptr)
 8000624:	4b0c      	ldr	r3, [pc, #48]	; (8000658 <_sbrk+0x50>)
 8000626:	681a      	ldr	r2, [r3, #0]
 8000628:	687b      	ldr	r3, [r7, #4]
 800062a:	4413      	add	r3, r2
 800062c:	466a      	mov	r2, sp
 800062e:	4293      	cmp	r3, r2
 8000630:	d907      	bls.n	8000642 <_sbrk+0x3a>
	{
		errno = ENOMEM;
 8000632:	f000 f83f 	bl	80006b4 <__errno>
 8000636:	4602      	mov	r2, r0
 8000638:	230c      	movs	r3, #12
 800063a:	6013      	str	r3, [r2, #0]
		return (caddr_t) -1;
 800063c:	f04f 33ff 	mov.w	r3, #4294967295
 8000640:	e006      	b.n	8000650 <_sbrk+0x48>
	}

	heap_end += incr;
 8000642:	4b05      	ldr	r3, [pc, #20]	; (8000658 <_sbrk+0x50>)
 8000644:	681a      	ldr	r2, [r3, #0]
 8000646:	687b      	ldr	r3, [r7, #4]
 8000648:	4413      	add	r3, r2
 800064a:	4a03      	ldr	r2, [pc, #12]	; (8000658 <_sbrk+0x50>)
 800064c:	6013      	str	r3, [r2, #0]

	return (caddr_t) prev_heap_end;
 800064e:	68fb      	ldr	r3, [r7, #12]
}
 8000650:	4618      	mov	r0, r3
 8000652:	3710      	adds	r7, #16
 8000654:	46bd      	mov	sp, r7
 8000656:	bd80      	pop	{r7, pc}
 8000658:	200000c8 	.word	0x200000c8
 800065c:	200000d8 	.word	0x200000d8

08000660 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000660:	480d      	ldr	r0, [pc, #52]	; (8000698 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000662:	4685      	mov	sp, r0

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000664:	480d      	ldr	r0, [pc, #52]	; (800069c <LoopForever+0x6>)
  ldr r1, =_edata
 8000666:	490e      	ldr	r1, [pc, #56]	; (80006a0 <LoopForever+0xa>)
  ldr r2, =_sidata
 8000668:	4a0e      	ldr	r2, [pc, #56]	; (80006a4 <LoopForever+0xe>)
  movs r3, #0
 800066a:	2300      	movs	r3, #0
  b LoopCopyDataInit
 800066c:	e002      	b.n	8000674 <LoopCopyDataInit>

0800066e <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800066e:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000670:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000672:	3304      	adds	r3, #4

08000674 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000674:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000676:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000678:	d3f9      	bcc.n	800066e <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800067a:	4a0b      	ldr	r2, [pc, #44]	; (80006a8 <LoopForever+0x12>)
  ldr r4, =_ebss
 800067c:	4c0b      	ldr	r4, [pc, #44]	; (80006ac <LoopForever+0x16>)
  movs r3, #0
 800067e:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000680:	e001      	b.n	8000686 <LoopFillZerobss>

08000682 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000682:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000684:	3204      	adds	r2, #4

08000686 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000686:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000688:	d3fb      	bcc.n	8000682 <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit
 800068a:	f3af 8000 	nop.w
/* Call static constructors */
  bl __libc_init_array
 800068e:	f000 f817 	bl	80006c0 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000692:	f7ff feeb 	bl	800046c <main>

08000696 <LoopForever>:

LoopForever:
    b LoopForever
 8000696:	e7fe      	b.n	8000696 <LoopForever>
  ldr   r0, =_estack
 8000698:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 800069c:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80006a0:	200000ac 	.word	0x200000ac
  ldr r2, =_sidata
 80006a4:	08001700 	.word	0x08001700
  ldr r2, =_sbss
 80006a8:	200000ac 	.word	0x200000ac
  ldr r4, =_ebss
 80006ac:	200000d8 	.word	0x200000d8

080006b0 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80006b0:	e7fe      	b.n	80006b0 <ADC_IRQHandler>
	...

080006b4 <__errno>:
 80006b4:	4b01      	ldr	r3, [pc, #4]	; (80006bc <__errno+0x8>)
 80006b6:	6818      	ldr	r0, [r3, #0]
 80006b8:	4770      	bx	lr
 80006ba:	bf00      	nop
 80006bc:	20000048 	.word	0x20000048

080006c0 <__libc_init_array>:
 80006c0:	b570      	push	{r4, r5, r6, lr}
 80006c2:	4e0d      	ldr	r6, [pc, #52]	; (80006f8 <__libc_init_array+0x38>)
 80006c4:	4c0d      	ldr	r4, [pc, #52]	; (80006fc <__libc_init_array+0x3c>)
 80006c6:	1ba4      	subs	r4, r4, r6
 80006c8:	10a4      	asrs	r4, r4, #2
 80006ca:	2500      	movs	r5, #0
 80006cc:	42a5      	cmp	r5, r4
 80006ce:	d109      	bne.n	80006e4 <__libc_init_array+0x24>
 80006d0:	4e0b      	ldr	r6, [pc, #44]	; (8000700 <__libc_init_array+0x40>)
 80006d2:	4c0c      	ldr	r4, [pc, #48]	; (8000704 <__libc_init_array+0x44>)
 80006d4:	f000 ff8a 	bl	80015ec <_init>
 80006d8:	1ba4      	subs	r4, r4, r6
 80006da:	10a4      	asrs	r4, r4, #2
 80006dc:	2500      	movs	r5, #0
 80006de:	42a5      	cmp	r5, r4
 80006e0:	d105      	bne.n	80006ee <__libc_init_array+0x2e>
 80006e2:	bd70      	pop	{r4, r5, r6, pc}
 80006e4:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 80006e8:	4798      	blx	r3
 80006ea:	3501      	adds	r5, #1
 80006ec:	e7ee      	b.n	80006cc <__libc_init_array+0xc>
 80006ee:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 80006f2:	4798      	blx	r3
 80006f4:	3501      	adds	r5, #1
 80006f6:	e7f2      	b.n	80006de <__libc_init_array+0x1e>
 80006f8:	080016f8 	.word	0x080016f8
 80006fc:	080016f8 	.word	0x080016f8
 8000700:	080016f8 	.word	0x080016f8
 8000704:	080016fc 	.word	0x080016fc

08000708 <memset>:
 8000708:	4402      	add	r2, r0
 800070a:	4603      	mov	r3, r0
 800070c:	4293      	cmp	r3, r2
 800070e:	d100      	bne.n	8000712 <memset+0xa>
 8000710:	4770      	bx	lr
 8000712:	f803 1b01 	strb.w	r1, [r3], #1
 8000716:	e7f9      	b.n	800070c <memset+0x4>

08000718 <iprintf>:
 8000718:	b40f      	push	{r0, r1, r2, r3}
 800071a:	4b0a      	ldr	r3, [pc, #40]	; (8000744 <iprintf+0x2c>)
 800071c:	b513      	push	{r0, r1, r4, lr}
 800071e:	681c      	ldr	r4, [r3, #0]
 8000720:	b124      	cbz	r4, 800072c <iprintf+0x14>
 8000722:	69a3      	ldr	r3, [r4, #24]
 8000724:	b913      	cbnz	r3, 800072c <iprintf+0x14>
 8000726:	4620      	mov	r0, r4
 8000728:	f000 f896 	bl	8000858 <__sinit>
 800072c:	ab05      	add	r3, sp, #20
 800072e:	9a04      	ldr	r2, [sp, #16]
 8000730:	68a1      	ldr	r1, [r4, #8]
 8000732:	9301      	str	r3, [sp, #4]
 8000734:	4620      	mov	r0, r4
 8000736:	f000 f9f3 	bl	8000b20 <_vfiprintf_r>
 800073a:	b002      	add	sp, #8
 800073c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000740:	b004      	add	sp, #16
 8000742:	4770      	bx	lr
 8000744:	20000048 	.word	0x20000048

08000748 <putchar>:
 8000748:	b538      	push	{r3, r4, r5, lr}
 800074a:	4b08      	ldr	r3, [pc, #32]	; (800076c <putchar+0x24>)
 800074c:	681c      	ldr	r4, [r3, #0]
 800074e:	4605      	mov	r5, r0
 8000750:	b124      	cbz	r4, 800075c <putchar+0x14>
 8000752:	69a3      	ldr	r3, [r4, #24]
 8000754:	b913      	cbnz	r3, 800075c <putchar+0x14>
 8000756:	4620      	mov	r0, r4
 8000758:	f000 f87e 	bl	8000858 <__sinit>
 800075c:	68a2      	ldr	r2, [r4, #8]
 800075e:	4629      	mov	r1, r5
 8000760:	4620      	mov	r0, r4
 8000762:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8000766:	f000 bc79 	b.w	800105c <_putc_r>
 800076a:	bf00      	nop
 800076c:	20000048 	.word	0x20000048

08000770 <rand>:
 8000770:	b538      	push	{r3, r4, r5, lr}
 8000772:	4b13      	ldr	r3, [pc, #76]	; (80007c0 <rand+0x50>)
 8000774:	681c      	ldr	r4, [r3, #0]
 8000776:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8000778:	b97b      	cbnz	r3, 800079a <rand+0x2a>
 800077a:	2018      	movs	r0, #24
 800077c:	f000 f8f6 	bl	800096c <malloc>
 8000780:	4a10      	ldr	r2, [pc, #64]	; (80007c4 <rand+0x54>)
 8000782:	4b11      	ldr	r3, [pc, #68]	; (80007c8 <rand+0x58>)
 8000784:	63a0      	str	r0, [r4, #56]	; 0x38
 8000786:	e9c0 2300 	strd	r2, r3, [r0]
 800078a:	4b10      	ldr	r3, [pc, #64]	; (80007cc <rand+0x5c>)
 800078c:	6083      	str	r3, [r0, #8]
 800078e:	230b      	movs	r3, #11
 8000790:	8183      	strh	r3, [r0, #12]
 8000792:	2201      	movs	r2, #1
 8000794:	2300      	movs	r3, #0
 8000796:	e9c0 2304 	strd	r2, r3, [r0, #16]
 800079a:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 800079c:	480c      	ldr	r0, [pc, #48]	; (80007d0 <rand+0x60>)
 800079e:	690a      	ldr	r2, [r1, #16]
 80007a0:	694b      	ldr	r3, [r1, #20]
 80007a2:	4c0c      	ldr	r4, [pc, #48]	; (80007d4 <rand+0x64>)
 80007a4:	4350      	muls	r0, r2
 80007a6:	fb04 0003 	mla	r0, r4, r3, r0
 80007aa:	fba2 2304 	umull	r2, r3, r2, r4
 80007ae:	4403      	add	r3, r0
 80007b0:	1c54      	adds	r4, r2, #1
 80007b2:	f143 0500 	adc.w	r5, r3, #0
 80007b6:	e9c1 4504 	strd	r4, r5, [r1, #16]
 80007ba:	f025 4000 	bic.w	r0, r5, #2147483648	; 0x80000000
 80007be:	bd38      	pop	{r3, r4, r5, pc}
 80007c0:	20000048 	.word	0x20000048
 80007c4:	abcd330e 	.word	0xabcd330e
 80007c8:	e66d1234 	.word	0xe66d1234
 80007cc:	0005deec 	.word	0x0005deec
 80007d0:	5851f42d 	.word	0x5851f42d
 80007d4:	4c957f2d 	.word	0x4c957f2d

080007d8 <std>:
 80007d8:	2300      	movs	r3, #0
 80007da:	b510      	push	{r4, lr}
 80007dc:	4604      	mov	r4, r0
 80007de:	e9c0 3300 	strd	r3, r3, [r0]
 80007e2:	6083      	str	r3, [r0, #8]
 80007e4:	8181      	strh	r1, [r0, #12]
 80007e6:	6643      	str	r3, [r0, #100]	; 0x64
 80007e8:	81c2      	strh	r2, [r0, #14]
 80007ea:	e9c0 3304 	strd	r3, r3, [r0, #16]
 80007ee:	6183      	str	r3, [r0, #24]
 80007f0:	4619      	mov	r1, r3
 80007f2:	2208      	movs	r2, #8
 80007f4:	305c      	adds	r0, #92	; 0x5c
 80007f6:	f7ff ff87 	bl	8000708 <memset>
 80007fa:	4b05      	ldr	r3, [pc, #20]	; (8000810 <std+0x38>)
 80007fc:	6263      	str	r3, [r4, #36]	; 0x24
 80007fe:	4b05      	ldr	r3, [pc, #20]	; (8000814 <std+0x3c>)
 8000800:	62a3      	str	r3, [r4, #40]	; 0x28
 8000802:	4b05      	ldr	r3, [pc, #20]	; (8000818 <std+0x40>)
 8000804:	62e3      	str	r3, [r4, #44]	; 0x2c
 8000806:	4b05      	ldr	r3, [pc, #20]	; (800081c <std+0x44>)
 8000808:	6224      	str	r4, [r4, #32]
 800080a:	6323      	str	r3, [r4, #48]	; 0x30
 800080c:	bd10      	pop	{r4, pc}
 800080e:	bf00      	nop
 8000810:	080010e9 	.word	0x080010e9
 8000814:	0800110b 	.word	0x0800110b
 8000818:	08001143 	.word	0x08001143
 800081c:	08001167 	.word	0x08001167

08000820 <_cleanup_r>:
 8000820:	4901      	ldr	r1, [pc, #4]	; (8000828 <_cleanup_r+0x8>)
 8000822:	f000 b885 	b.w	8000930 <_fwalk_reent>
 8000826:	bf00      	nop
 8000828:	08001441 	.word	0x08001441

0800082c <__sfmoreglue>:
 800082c:	b570      	push	{r4, r5, r6, lr}
 800082e:	1e4a      	subs	r2, r1, #1
 8000830:	2568      	movs	r5, #104	; 0x68
 8000832:	4355      	muls	r5, r2
 8000834:	460e      	mov	r6, r1
 8000836:	f105 0174 	add.w	r1, r5, #116	; 0x74
 800083a:	f000 f8ed 	bl	8000a18 <_malloc_r>
 800083e:	4604      	mov	r4, r0
 8000840:	b140      	cbz	r0, 8000854 <__sfmoreglue+0x28>
 8000842:	2100      	movs	r1, #0
 8000844:	e9c0 1600 	strd	r1, r6, [r0]
 8000848:	300c      	adds	r0, #12
 800084a:	60a0      	str	r0, [r4, #8]
 800084c:	f105 0268 	add.w	r2, r5, #104	; 0x68
 8000850:	f7ff ff5a 	bl	8000708 <memset>
 8000854:	4620      	mov	r0, r4
 8000856:	bd70      	pop	{r4, r5, r6, pc}

08000858 <__sinit>:
 8000858:	6983      	ldr	r3, [r0, #24]
 800085a:	b510      	push	{r4, lr}
 800085c:	4604      	mov	r4, r0
 800085e:	bb33      	cbnz	r3, 80008ae <__sinit+0x56>
 8000860:	e9c0 3312 	strd	r3, r3, [r0, #72]	; 0x48
 8000864:	6503      	str	r3, [r0, #80]	; 0x50
 8000866:	4b12      	ldr	r3, [pc, #72]	; (80008b0 <__sinit+0x58>)
 8000868:	4a12      	ldr	r2, [pc, #72]	; (80008b4 <__sinit+0x5c>)
 800086a:	681b      	ldr	r3, [r3, #0]
 800086c:	6282      	str	r2, [r0, #40]	; 0x28
 800086e:	4298      	cmp	r0, r3
 8000870:	bf04      	itt	eq
 8000872:	2301      	moveq	r3, #1
 8000874:	6183      	streq	r3, [r0, #24]
 8000876:	f000 f81f 	bl	80008b8 <__sfp>
 800087a:	6060      	str	r0, [r4, #4]
 800087c:	4620      	mov	r0, r4
 800087e:	f000 f81b 	bl	80008b8 <__sfp>
 8000882:	60a0      	str	r0, [r4, #8]
 8000884:	4620      	mov	r0, r4
 8000886:	f000 f817 	bl	80008b8 <__sfp>
 800088a:	2200      	movs	r2, #0
 800088c:	60e0      	str	r0, [r4, #12]
 800088e:	2104      	movs	r1, #4
 8000890:	6860      	ldr	r0, [r4, #4]
 8000892:	f7ff ffa1 	bl	80007d8 <std>
 8000896:	2201      	movs	r2, #1
 8000898:	2109      	movs	r1, #9
 800089a:	68a0      	ldr	r0, [r4, #8]
 800089c:	f7ff ff9c 	bl	80007d8 <std>
 80008a0:	2202      	movs	r2, #2
 80008a2:	2112      	movs	r1, #18
 80008a4:	68e0      	ldr	r0, [r4, #12]
 80008a6:	f7ff ff97 	bl	80007d8 <std>
 80008aa:	2301      	movs	r3, #1
 80008ac:	61a3      	str	r3, [r4, #24]
 80008ae:	bd10      	pop	{r4, pc}
 80008b0:	08001660 	.word	0x08001660
 80008b4:	08000821 	.word	0x08000821

080008b8 <__sfp>:
 80008b8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80008ba:	4b1b      	ldr	r3, [pc, #108]	; (8000928 <__sfp+0x70>)
 80008bc:	681e      	ldr	r6, [r3, #0]
 80008be:	69b3      	ldr	r3, [r6, #24]
 80008c0:	4607      	mov	r7, r0
 80008c2:	b913      	cbnz	r3, 80008ca <__sfp+0x12>
 80008c4:	4630      	mov	r0, r6
 80008c6:	f7ff ffc7 	bl	8000858 <__sinit>
 80008ca:	3648      	adds	r6, #72	; 0x48
 80008cc:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 80008d0:	3b01      	subs	r3, #1
 80008d2:	d503      	bpl.n	80008dc <__sfp+0x24>
 80008d4:	6833      	ldr	r3, [r6, #0]
 80008d6:	b133      	cbz	r3, 80008e6 <__sfp+0x2e>
 80008d8:	6836      	ldr	r6, [r6, #0]
 80008da:	e7f7      	b.n	80008cc <__sfp+0x14>
 80008dc:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 80008e0:	b16d      	cbz	r5, 80008fe <__sfp+0x46>
 80008e2:	3468      	adds	r4, #104	; 0x68
 80008e4:	e7f4      	b.n	80008d0 <__sfp+0x18>
 80008e6:	2104      	movs	r1, #4
 80008e8:	4638      	mov	r0, r7
 80008ea:	f7ff ff9f 	bl	800082c <__sfmoreglue>
 80008ee:	6030      	str	r0, [r6, #0]
 80008f0:	2800      	cmp	r0, #0
 80008f2:	d1f1      	bne.n	80008d8 <__sfp+0x20>
 80008f4:	230c      	movs	r3, #12
 80008f6:	603b      	str	r3, [r7, #0]
 80008f8:	4604      	mov	r4, r0
 80008fa:	4620      	mov	r0, r4
 80008fc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80008fe:	4b0b      	ldr	r3, [pc, #44]	; (800092c <__sfp+0x74>)
 8000900:	6665      	str	r5, [r4, #100]	; 0x64
 8000902:	e9c4 5500 	strd	r5, r5, [r4]
 8000906:	60a5      	str	r5, [r4, #8]
 8000908:	e9c4 3503 	strd	r3, r5, [r4, #12]
 800090c:	e9c4 5505 	strd	r5, r5, [r4, #20]
 8000910:	2208      	movs	r2, #8
 8000912:	4629      	mov	r1, r5
 8000914:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 8000918:	f7ff fef6 	bl	8000708 <memset>
 800091c:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 8000920:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 8000924:	e7e9      	b.n	80008fa <__sfp+0x42>
 8000926:	bf00      	nop
 8000928:	08001660 	.word	0x08001660
 800092c:	ffff0001 	.word	0xffff0001

08000930 <_fwalk_reent>:
 8000930:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000934:	4680      	mov	r8, r0
 8000936:	4689      	mov	r9, r1
 8000938:	f100 0448 	add.w	r4, r0, #72	; 0x48
 800093c:	2600      	movs	r6, #0
 800093e:	b914      	cbnz	r4, 8000946 <_fwalk_reent+0x16>
 8000940:	4630      	mov	r0, r6
 8000942:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8000946:	e9d4 7501 	ldrd	r7, r5, [r4, #4]
 800094a:	3f01      	subs	r7, #1
 800094c:	d501      	bpl.n	8000952 <_fwalk_reent+0x22>
 800094e:	6824      	ldr	r4, [r4, #0]
 8000950:	e7f5      	b.n	800093e <_fwalk_reent+0xe>
 8000952:	89ab      	ldrh	r3, [r5, #12]
 8000954:	2b01      	cmp	r3, #1
 8000956:	d907      	bls.n	8000968 <_fwalk_reent+0x38>
 8000958:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 800095c:	3301      	adds	r3, #1
 800095e:	d003      	beq.n	8000968 <_fwalk_reent+0x38>
 8000960:	4629      	mov	r1, r5
 8000962:	4640      	mov	r0, r8
 8000964:	47c8      	blx	r9
 8000966:	4306      	orrs	r6, r0
 8000968:	3568      	adds	r5, #104	; 0x68
 800096a:	e7ee      	b.n	800094a <_fwalk_reent+0x1a>

0800096c <malloc>:
 800096c:	4b02      	ldr	r3, [pc, #8]	; (8000978 <malloc+0xc>)
 800096e:	4601      	mov	r1, r0
 8000970:	6818      	ldr	r0, [r3, #0]
 8000972:	f000 b851 	b.w	8000a18 <_malloc_r>
 8000976:	bf00      	nop
 8000978:	20000048 	.word	0x20000048

0800097c <_free_r>:
 800097c:	b538      	push	{r3, r4, r5, lr}
 800097e:	4605      	mov	r5, r0
 8000980:	2900      	cmp	r1, #0
 8000982:	d045      	beq.n	8000a10 <_free_r+0x94>
 8000984:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8000988:	1f0c      	subs	r4, r1, #4
 800098a:	2b00      	cmp	r3, #0
 800098c:	bfb8      	it	lt
 800098e:	18e4      	addlt	r4, r4, r3
 8000990:	f000 fdf6 	bl	8001580 <__malloc_lock>
 8000994:	4a1f      	ldr	r2, [pc, #124]	; (8000a14 <_free_r+0x98>)
 8000996:	6813      	ldr	r3, [r2, #0]
 8000998:	4610      	mov	r0, r2
 800099a:	b933      	cbnz	r3, 80009aa <_free_r+0x2e>
 800099c:	6063      	str	r3, [r4, #4]
 800099e:	6014      	str	r4, [r2, #0]
 80009a0:	4628      	mov	r0, r5
 80009a2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80009a6:	f000 bdec 	b.w	8001582 <__malloc_unlock>
 80009aa:	42a3      	cmp	r3, r4
 80009ac:	d90c      	bls.n	80009c8 <_free_r+0x4c>
 80009ae:	6821      	ldr	r1, [r4, #0]
 80009b0:	1862      	adds	r2, r4, r1
 80009b2:	4293      	cmp	r3, r2
 80009b4:	bf04      	itt	eq
 80009b6:	681a      	ldreq	r2, [r3, #0]
 80009b8:	685b      	ldreq	r3, [r3, #4]
 80009ba:	6063      	str	r3, [r4, #4]
 80009bc:	bf04      	itt	eq
 80009be:	1852      	addeq	r2, r2, r1
 80009c0:	6022      	streq	r2, [r4, #0]
 80009c2:	6004      	str	r4, [r0, #0]
 80009c4:	e7ec      	b.n	80009a0 <_free_r+0x24>
 80009c6:	4613      	mov	r3, r2
 80009c8:	685a      	ldr	r2, [r3, #4]
 80009ca:	b10a      	cbz	r2, 80009d0 <_free_r+0x54>
 80009cc:	42a2      	cmp	r2, r4
 80009ce:	d9fa      	bls.n	80009c6 <_free_r+0x4a>
 80009d0:	6819      	ldr	r1, [r3, #0]
 80009d2:	1858      	adds	r0, r3, r1
 80009d4:	42a0      	cmp	r0, r4
 80009d6:	d10b      	bne.n	80009f0 <_free_r+0x74>
 80009d8:	6820      	ldr	r0, [r4, #0]
 80009da:	4401      	add	r1, r0
 80009dc:	1858      	adds	r0, r3, r1
 80009de:	4282      	cmp	r2, r0
 80009e0:	6019      	str	r1, [r3, #0]
 80009e2:	d1dd      	bne.n	80009a0 <_free_r+0x24>
 80009e4:	6810      	ldr	r0, [r2, #0]
 80009e6:	6852      	ldr	r2, [r2, #4]
 80009e8:	605a      	str	r2, [r3, #4]
 80009ea:	4401      	add	r1, r0
 80009ec:	6019      	str	r1, [r3, #0]
 80009ee:	e7d7      	b.n	80009a0 <_free_r+0x24>
 80009f0:	d902      	bls.n	80009f8 <_free_r+0x7c>
 80009f2:	230c      	movs	r3, #12
 80009f4:	602b      	str	r3, [r5, #0]
 80009f6:	e7d3      	b.n	80009a0 <_free_r+0x24>
 80009f8:	6820      	ldr	r0, [r4, #0]
 80009fa:	1821      	adds	r1, r4, r0
 80009fc:	428a      	cmp	r2, r1
 80009fe:	bf04      	itt	eq
 8000a00:	6811      	ldreq	r1, [r2, #0]
 8000a02:	6852      	ldreq	r2, [r2, #4]
 8000a04:	6062      	str	r2, [r4, #4]
 8000a06:	bf04      	itt	eq
 8000a08:	1809      	addeq	r1, r1, r0
 8000a0a:	6021      	streq	r1, [r4, #0]
 8000a0c:	605c      	str	r4, [r3, #4]
 8000a0e:	e7c7      	b.n	80009a0 <_free_r+0x24>
 8000a10:	bd38      	pop	{r3, r4, r5, pc}
 8000a12:	bf00      	nop
 8000a14:	200000cc 	.word	0x200000cc

08000a18 <_malloc_r>:
 8000a18:	b570      	push	{r4, r5, r6, lr}
 8000a1a:	1ccd      	adds	r5, r1, #3
 8000a1c:	f025 0503 	bic.w	r5, r5, #3
 8000a20:	3508      	adds	r5, #8
 8000a22:	2d0c      	cmp	r5, #12
 8000a24:	bf38      	it	cc
 8000a26:	250c      	movcc	r5, #12
 8000a28:	2d00      	cmp	r5, #0
 8000a2a:	4606      	mov	r6, r0
 8000a2c:	db01      	blt.n	8000a32 <_malloc_r+0x1a>
 8000a2e:	42a9      	cmp	r1, r5
 8000a30:	d903      	bls.n	8000a3a <_malloc_r+0x22>
 8000a32:	230c      	movs	r3, #12
 8000a34:	6033      	str	r3, [r6, #0]
 8000a36:	2000      	movs	r0, #0
 8000a38:	bd70      	pop	{r4, r5, r6, pc}
 8000a3a:	f000 fda1 	bl	8001580 <__malloc_lock>
 8000a3e:	4a21      	ldr	r2, [pc, #132]	; (8000ac4 <_malloc_r+0xac>)
 8000a40:	6814      	ldr	r4, [r2, #0]
 8000a42:	4621      	mov	r1, r4
 8000a44:	b991      	cbnz	r1, 8000a6c <_malloc_r+0x54>
 8000a46:	4c20      	ldr	r4, [pc, #128]	; (8000ac8 <_malloc_r+0xb0>)
 8000a48:	6823      	ldr	r3, [r4, #0]
 8000a4a:	b91b      	cbnz	r3, 8000a54 <_malloc_r+0x3c>
 8000a4c:	4630      	mov	r0, r6
 8000a4e:	f000 fb3b 	bl	80010c8 <_sbrk_r>
 8000a52:	6020      	str	r0, [r4, #0]
 8000a54:	4629      	mov	r1, r5
 8000a56:	4630      	mov	r0, r6
 8000a58:	f000 fb36 	bl	80010c8 <_sbrk_r>
 8000a5c:	1c43      	adds	r3, r0, #1
 8000a5e:	d124      	bne.n	8000aaa <_malloc_r+0x92>
 8000a60:	230c      	movs	r3, #12
 8000a62:	6033      	str	r3, [r6, #0]
 8000a64:	4630      	mov	r0, r6
 8000a66:	f000 fd8c 	bl	8001582 <__malloc_unlock>
 8000a6a:	e7e4      	b.n	8000a36 <_malloc_r+0x1e>
 8000a6c:	680b      	ldr	r3, [r1, #0]
 8000a6e:	1b5b      	subs	r3, r3, r5
 8000a70:	d418      	bmi.n	8000aa4 <_malloc_r+0x8c>
 8000a72:	2b0b      	cmp	r3, #11
 8000a74:	d90f      	bls.n	8000a96 <_malloc_r+0x7e>
 8000a76:	600b      	str	r3, [r1, #0]
 8000a78:	50cd      	str	r5, [r1, r3]
 8000a7a:	18cc      	adds	r4, r1, r3
 8000a7c:	4630      	mov	r0, r6
 8000a7e:	f000 fd80 	bl	8001582 <__malloc_unlock>
 8000a82:	f104 000b 	add.w	r0, r4, #11
 8000a86:	1d23      	adds	r3, r4, #4
 8000a88:	f020 0007 	bic.w	r0, r0, #7
 8000a8c:	1ac3      	subs	r3, r0, r3
 8000a8e:	d0d3      	beq.n	8000a38 <_malloc_r+0x20>
 8000a90:	425a      	negs	r2, r3
 8000a92:	50e2      	str	r2, [r4, r3]
 8000a94:	e7d0      	b.n	8000a38 <_malloc_r+0x20>
 8000a96:	428c      	cmp	r4, r1
 8000a98:	684b      	ldr	r3, [r1, #4]
 8000a9a:	bf16      	itet	ne
 8000a9c:	6063      	strne	r3, [r4, #4]
 8000a9e:	6013      	streq	r3, [r2, #0]
 8000aa0:	460c      	movne	r4, r1
 8000aa2:	e7eb      	b.n	8000a7c <_malloc_r+0x64>
 8000aa4:	460c      	mov	r4, r1
 8000aa6:	6849      	ldr	r1, [r1, #4]
 8000aa8:	e7cc      	b.n	8000a44 <_malloc_r+0x2c>
 8000aaa:	1cc4      	adds	r4, r0, #3
 8000aac:	f024 0403 	bic.w	r4, r4, #3
 8000ab0:	42a0      	cmp	r0, r4
 8000ab2:	d005      	beq.n	8000ac0 <_malloc_r+0xa8>
 8000ab4:	1a21      	subs	r1, r4, r0
 8000ab6:	4630      	mov	r0, r6
 8000ab8:	f000 fb06 	bl	80010c8 <_sbrk_r>
 8000abc:	3001      	adds	r0, #1
 8000abe:	d0cf      	beq.n	8000a60 <_malloc_r+0x48>
 8000ac0:	6025      	str	r5, [r4, #0]
 8000ac2:	e7db      	b.n	8000a7c <_malloc_r+0x64>
 8000ac4:	200000cc 	.word	0x200000cc
 8000ac8:	200000d0 	.word	0x200000d0

08000acc <__sfputc_r>:
 8000acc:	6893      	ldr	r3, [r2, #8]
 8000ace:	3b01      	subs	r3, #1
 8000ad0:	2b00      	cmp	r3, #0
 8000ad2:	b410      	push	{r4}
 8000ad4:	6093      	str	r3, [r2, #8]
 8000ad6:	da08      	bge.n	8000aea <__sfputc_r+0x1e>
 8000ad8:	6994      	ldr	r4, [r2, #24]
 8000ada:	42a3      	cmp	r3, r4
 8000adc:	db01      	blt.n	8000ae2 <__sfputc_r+0x16>
 8000ade:	290a      	cmp	r1, #10
 8000ae0:	d103      	bne.n	8000aea <__sfputc_r+0x1e>
 8000ae2:	f85d 4b04 	ldr.w	r4, [sp], #4
 8000ae6:	f000 bb43 	b.w	8001170 <__swbuf_r>
 8000aea:	6813      	ldr	r3, [r2, #0]
 8000aec:	1c58      	adds	r0, r3, #1
 8000aee:	6010      	str	r0, [r2, #0]
 8000af0:	7019      	strb	r1, [r3, #0]
 8000af2:	4608      	mov	r0, r1
 8000af4:	f85d 4b04 	ldr.w	r4, [sp], #4
 8000af8:	4770      	bx	lr

08000afa <__sfputs_r>:
 8000afa:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000afc:	4606      	mov	r6, r0
 8000afe:	460f      	mov	r7, r1
 8000b00:	4614      	mov	r4, r2
 8000b02:	18d5      	adds	r5, r2, r3
 8000b04:	42ac      	cmp	r4, r5
 8000b06:	d101      	bne.n	8000b0c <__sfputs_r+0x12>
 8000b08:	2000      	movs	r0, #0
 8000b0a:	e007      	b.n	8000b1c <__sfputs_r+0x22>
 8000b0c:	463a      	mov	r2, r7
 8000b0e:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000b12:	4630      	mov	r0, r6
 8000b14:	f7ff ffda 	bl	8000acc <__sfputc_r>
 8000b18:	1c43      	adds	r3, r0, #1
 8000b1a:	d1f3      	bne.n	8000b04 <__sfputs_r+0xa>
 8000b1c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08000b20 <_vfiprintf_r>:
 8000b20:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8000b24:	460c      	mov	r4, r1
 8000b26:	b09d      	sub	sp, #116	; 0x74
 8000b28:	4617      	mov	r7, r2
 8000b2a:	461d      	mov	r5, r3
 8000b2c:	4606      	mov	r6, r0
 8000b2e:	b118      	cbz	r0, 8000b38 <_vfiprintf_r+0x18>
 8000b30:	6983      	ldr	r3, [r0, #24]
 8000b32:	b90b      	cbnz	r3, 8000b38 <_vfiprintf_r+0x18>
 8000b34:	f7ff fe90 	bl	8000858 <__sinit>
 8000b38:	4b7c      	ldr	r3, [pc, #496]	; (8000d2c <_vfiprintf_r+0x20c>)
 8000b3a:	429c      	cmp	r4, r3
 8000b3c:	d158      	bne.n	8000bf0 <_vfiprintf_r+0xd0>
 8000b3e:	6874      	ldr	r4, [r6, #4]
 8000b40:	89a3      	ldrh	r3, [r4, #12]
 8000b42:	0718      	lsls	r0, r3, #28
 8000b44:	d55e      	bpl.n	8000c04 <_vfiprintf_r+0xe4>
 8000b46:	6923      	ldr	r3, [r4, #16]
 8000b48:	2b00      	cmp	r3, #0
 8000b4a:	d05b      	beq.n	8000c04 <_vfiprintf_r+0xe4>
 8000b4c:	2300      	movs	r3, #0
 8000b4e:	9309      	str	r3, [sp, #36]	; 0x24
 8000b50:	2320      	movs	r3, #32
 8000b52:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8000b56:	2330      	movs	r3, #48	; 0x30
 8000b58:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8000b5c:	9503      	str	r5, [sp, #12]
 8000b5e:	f04f 0b01 	mov.w	fp, #1
 8000b62:	46b8      	mov	r8, r7
 8000b64:	4645      	mov	r5, r8
 8000b66:	f815 3b01 	ldrb.w	r3, [r5], #1
 8000b6a:	b10b      	cbz	r3, 8000b70 <_vfiprintf_r+0x50>
 8000b6c:	2b25      	cmp	r3, #37	; 0x25
 8000b6e:	d154      	bne.n	8000c1a <_vfiprintf_r+0xfa>
 8000b70:	ebb8 0a07 	subs.w	sl, r8, r7
 8000b74:	d00b      	beq.n	8000b8e <_vfiprintf_r+0x6e>
 8000b76:	4653      	mov	r3, sl
 8000b78:	463a      	mov	r2, r7
 8000b7a:	4621      	mov	r1, r4
 8000b7c:	4630      	mov	r0, r6
 8000b7e:	f7ff ffbc 	bl	8000afa <__sfputs_r>
 8000b82:	3001      	adds	r0, #1
 8000b84:	f000 80c2 	beq.w	8000d0c <_vfiprintf_r+0x1ec>
 8000b88:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8000b8a:	4453      	add	r3, sl
 8000b8c:	9309      	str	r3, [sp, #36]	; 0x24
 8000b8e:	f898 3000 	ldrb.w	r3, [r8]
 8000b92:	2b00      	cmp	r3, #0
 8000b94:	f000 80ba 	beq.w	8000d0c <_vfiprintf_r+0x1ec>
 8000b98:	2300      	movs	r3, #0
 8000b9a:	f04f 32ff 	mov.w	r2, #4294967295
 8000b9e:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8000ba2:	9304      	str	r3, [sp, #16]
 8000ba4:	9307      	str	r3, [sp, #28]
 8000ba6:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8000baa:	931a      	str	r3, [sp, #104]	; 0x68
 8000bac:	46a8      	mov	r8, r5
 8000bae:	2205      	movs	r2, #5
 8000bb0:	f818 1b01 	ldrb.w	r1, [r8], #1
 8000bb4:	485e      	ldr	r0, [pc, #376]	; (8000d30 <_vfiprintf_r+0x210>)
 8000bb6:	f7ff fb1b 	bl	80001f0 <memchr>
 8000bba:	9b04      	ldr	r3, [sp, #16]
 8000bbc:	bb78      	cbnz	r0, 8000c1e <_vfiprintf_r+0xfe>
 8000bbe:	06d9      	lsls	r1, r3, #27
 8000bc0:	bf44      	itt	mi
 8000bc2:	2220      	movmi	r2, #32
 8000bc4:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
 8000bc8:	071a      	lsls	r2, r3, #28
 8000bca:	bf44      	itt	mi
 8000bcc:	222b      	movmi	r2, #43	; 0x2b
 8000bce:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
 8000bd2:	782a      	ldrb	r2, [r5, #0]
 8000bd4:	2a2a      	cmp	r2, #42	; 0x2a
 8000bd6:	d02a      	beq.n	8000c2e <_vfiprintf_r+0x10e>
 8000bd8:	9a07      	ldr	r2, [sp, #28]
 8000bda:	46a8      	mov	r8, r5
 8000bdc:	2000      	movs	r0, #0
 8000bde:	250a      	movs	r5, #10
 8000be0:	4641      	mov	r1, r8
 8000be2:	f811 3b01 	ldrb.w	r3, [r1], #1
 8000be6:	3b30      	subs	r3, #48	; 0x30
 8000be8:	2b09      	cmp	r3, #9
 8000bea:	d969      	bls.n	8000cc0 <_vfiprintf_r+0x1a0>
 8000bec:	b360      	cbz	r0, 8000c48 <_vfiprintf_r+0x128>
 8000bee:	e024      	b.n	8000c3a <_vfiprintf_r+0x11a>
 8000bf0:	4b50      	ldr	r3, [pc, #320]	; (8000d34 <_vfiprintf_r+0x214>)
 8000bf2:	429c      	cmp	r4, r3
 8000bf4:	d101      	bne.n	8000bfa <_vfiprintf_r+0xda>
 8000bf6:	68b4      	ldr	r4, [r6, #8]
 8000bf8:	e7a2      	b.n	8000b40 <_vfiprintf_r+0x20>
 8000bfa:	4b4f      	ldr	r3, [pc, #316]	; (8000d38 <_vfiprintf_r+0x218>)
 8000bfc:	429c      	cmp	r4, r3
 8000bfe:	bf08      	it	eq
 8000c00:	68f4      	ldreq	r4, [r6, #12]
 8000c02:	e79d      	b.n	8000b40 <_vfiprintf_r+0x20>
 8000c04:	4621      	mov	r1, r4
 8000c06:	4630      	mov	r0, r6
 8000c08:	f000 fb16 	bl	8001238 <__swsetup_r>
 8000c0c:	2800      	cmp	r0, #0
 8000c0e:	d09d      	beq.n	8000b4c <_vfiprintf_r+0x2c>
 8000c10:	f04f 30ff 	mov.w	r0, #4294967295
 8000c14:	b01d      	add	sp, #116	; 0x74
 8000c16:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8000c1a:	46a8      	mov	r8, r5
 8000c1c:	e7a2      	b.n	8000b64 <_vfiprintf_r+0x44>
 8000c1e:	4a44      	ldr	r2, [pc, #272]	; (8000d30 <_vfiprintf_r+0x210>)
 8000c20:	1a80      	subs	r0, r0, r2
 8000c22:	fa0b f000 	lsl.w	r0, fp, r0
 8000c26:	4318      	orrs	r0, r3
 8000c28:	9004      	str	r0, [sp, #16]
 8000c2a:	4645      	mov	r5, r8
 8000c2c:	e7be      	b.n	8000bac <_vfiprintf_r+0x8c>
 8000c2e:	9a03      	ldr	r2, [sp, #12]
 8000c30:	1d11      	adds	r1, r2, #4
 8000c32:	6812      	ldr	r2, [r2, #0]
 8000c34:	9103      	str	r1, [sp, #12]
 8000c36:	2a00      	cmp	r2, #0
 8000c38:	db01      	blt.n	8000c3e <_vfiprintf_r+0x11e>
 8000c3a:	9207      	str	r2, [sp, #28]
 8000c3c:	e004      	b.n	8000c48 <_vfiprintf_r+0x128>
 8000c3e:	4252      	negs	r2, r2
 8000c40:	f043 0302 	orr.w	r3, r3, #2
 8000c44:	9207      	str	r2, [sp, #28]
 8000c46:	9304      	str	r3, [sp, #16]
 8000c48:	f898 3000 	ldrb.w	r3, [r8]
 8000c4c:	2b2e      	cmp	r3, #46	; 0x2e
 8000c4e:	d10e      	bne.n	8000c6e <_vfiprintf_r+0x14e>
 8000c50:	f898 3001 	ldrb.w	r3, [r8, #1]
 8000c54:	2b2a      	cmp	r3, #42	; 0x2a
 8000c56:	d138      	bne.n	8000cca <_vfiprintf_r+0x1aa>
 8000c58:	9b03      	ldr	r3, [sp, #12]
 8000c5a:	1d1a      	adds	r2, r3, #4
 8000c5c:	681b      	ldr	r3, [r3, #0]
 8000c5e:	9203      	str	r2, [sp, #12]
 8000c60:	2b00      	cmp	r3, #0
 8000c62:	bfb8      	it	lt
 8000c64:	f04f 33ff 	movlt.w	r3, #4294967295
 8000c68:	f108 0802 	add.w	r8, r8, #2
 8000c6c:	9305      	str	r3, [sp, #20]
 8000c6e:	4d33      	ldr	r5, [pc, #204]	; (8000d3c <_vfiprintf_r+0x21c>)
 8000c70:	f898 1000 	ldrb.w	r1, [r8]
 8000c74:	2203      	movs	r2, #3
 8000c76:	4628      	mov	r0, r5
 8000c78:	f7ff faba 	bl	80001f0 <memchr>
 8000c7c:	b140      	cbz	r0, 8000c90 <_vfiprintf_r+0x170>
 8000c7e:	2340      	movs	r3, #64	; 0x40
 8000c80:	1b40      	subs	r0, r0, r5
 8000c82:	fa03 f000 	lsl.w	r0, r3, r0
 8000c86:	9b04      	ldr	r3, [sp, #16]
 8000c88:	4303      	orrs	r3, r0
 8000c8a:	f108 0801 	add.w	r8, r8, #1
 8000c8e:	9304      	str	r3, [sp, #16]
 8000c90:	f898 1000 	ldrb.w	r1, [r8]
 8000c94:	482a      	ldr	r0, [pc, #168]	; (8000d40 <_vfiprintf_r+0x220>)
 8000c96:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8000c9a:	2206      	movs	r2, #6
 8000c9c:	f108 0701 	add.w	r7, r8, #1
 8000ca0:	f7ff faa6 	bl	80001f0 <memchr>
 8000ca4:	2800      	cmp	r0, #0
 8000ca6:	d037      	beq.n	8000d18 <_vfiprintf_r+0x1f8>
 8000ca8:	4b26      	ldr	r3, [pc, #152]	; (8000d44 <_vfiprintf_r+0x224>)
 8000caa:	bb1b      	cbnz	r3, 8000cf4 <_vfiprintf_r+0x1d4>
 8000cac:	9b03      	ldr	r3, [sp, #12]
 8000cae:	3307      	adds	r3, #7
 8000cb0:	f023 0307 	bic.w	r3, r3, #7
 8000cb4:	3308      	adds	r3, #8
 8000cb6:	9303      	str	r3, [sp, #12]
 8000cb8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8000cba:	444b      	add	r3, r9
 8000cbc:	9309      	str	r3, [sp, #36]	; 0x24
 8000cbe:	e750      	b.n	8000b62 <_vfiprintf_r+0x42>
 8000cc0:	fb05 3202 	mla	r2, r5, r2, r3
 8000cc4:	2001      	movs	r0, #1
 8000cc6:	4688      	mov	r8, r1
 8000cc8:	e78a      	b.n	8000be0 <_vfiprintf_r+0xc0>
 8000cca:	2300      	movs	r3, #0
 8000ccc:	f108 0801 	add.w	r8, r8, #1
 8000cd0:	9305      	str	r3, [sp, #20]
 8000cd2:	4619      	mov	r1, r3
 8000cd4:	250a      	movs	r5, #10
 8000cd6:	4640      	mov	r0, r8
 8000cd8:	f810 2b01 	ldrb.w	r2, [r0], #1
 8000cdc:	3a30      	subs	r2, #48	; 0x30
 8000cde:	2a09      	cmp	r2, #9
 8000ce0:	d903      	bls.n	8000cea <_vfiprintf_r+0x1ca>
 8000ce2:	2b00      	cmp	r3, #0
 8000ce4:	d0c3      	beq.n	8000c6e <_vfiprintf_r+0x14e>
 8000ce6:	9105      	str	r1, [sp, #20]
 8000ce8:	e7c1      	b.n	8000c6e <_vfiprintf_r+0x14e>
 8000cea:	fb05 2101 	mla	r1, r5, r1, r2
 8000cee:	2301      	movs	r3, #1
 8000cf0:	4680      	mov	r8, r0
 8000cf2:	e7f0      	b.n	8000cd6 <_vfiprintf_r+0x1b6>
 8000cf4:	ab03      	add	r3, sp, #12
 8000cf6:	9300      	str	r3, [sp, #0]
 8000cf8:	4622      	mov	r2, r4
 8000cfa:	4b13      	ldr	r3, [pc, #76]	; (8000d48 <_vfiprintf_r+0x228>)
 8000cfc:	a904      	add	r1, sp, #16
 8000cfe:	4630      	mov	r0, r6
 8000d00:	f3af 8000 	nop.w
 8000d04:	f1b0 3fff 	cmp.w	r0, #4294967295
 8000d08:	4681      	mov	r9, r0
 8000d0a:	d1d5      	bne.n	8000cb8 <_vfiprintf_r+0x198>
 8000d0c:	89a3      	ldrh	r3, [r4, #12]
 8000d0e:	065b      	lsls	r3, r3, #25
 8000d10:	f53f af7e 	bmi.w	8000c10 <_vfiprintf_r+0xf0>
 8000d14:	9809      	ldr	r0, [sp, #36]	; 0x24
 8000d16:	e77d      	b.n	8000c14 <_vfiprintf_r+0xf4>
 8000d18:	ab03      	add	r3, sp, #12
 8000d1a:	9300      	str	r3, [sp, #0]
 8000d1c:	4622      	mov	r2, r4
 8000d1e:	4b0a      	ldr	r3, [pc, #40]	; (8000d48 <_vfiprintf_r+0x228>)
 8000d20:	a904      	add	r1, sp, #16
 8000d22:	4630      	mov	r0, r6
 8000d24:	f000 f888 	bl	8000e38 <_printf_i>
 8000d28:	e7ec      	b.n	8000d04 <_vfiprintf_r+0x1e4>
 8000d2a:	bf00      	nop
 8000d2c:	08001684 	.word	0x08001684
 8000d30:	080016c4 	.word	0x080016c4
 8000d34:	080016a4 	.word	0x080016a4
 8000d38:	08001664 	.word	0x08001664
 8000d3c:	080016ca 	.word	0x080016ca
 8000d40:	080016ce 	.word	0x080016ce
 8000d44:	00000000 	.word	0x00000000
 8000d48:	08000afb 	.word	0x08000afb

08000d4c <_printf_common>:
 8000d4c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000d50:	4691      	mov	r9, r2
 8000d52:	461f      	mov	r7, r3
 8000d54:	688a      	ldr	r2, [r1, #8]
 8000d56:	690b      	ldr	r3, [r1, #16]
 8000d58:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8000d5c:	4293      	cmp	r3, r2
 8000d5e:	bfb8      	it	lt
 8000d60:	4613      	movlt	r3, r2
 8000d62:	f8c9 3000 	str.w	r3, [r9]
 8000d66:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8000d6a:	4606      	mov	r6, r0
 8000d6c:	460c      	mov	r4, r1
 8000d6e:	b112      	cbz	r2, 8000d76 <_printf_common+0x2a>
 8000d70:	3301      	adds	r3, #1
 8000d72:	f8c9 3000 	str.w	r3, [r9]
 8000d76:	6823      	ldr	r3, [r4, #0]
 8000d78:	0699      	lsls	r1, r3, #26
 8000d7a:	bf42      	ittt	mi
 8000d7c:	f8d9 3000 	ldrmi.w	r3, [r9]
 8000d80:	3302      	addmi	r3, #2
 8000d82:	f8c9 3000 	strmi.w	r3, [r9]
 8000d86:	6825      	ldr	r5, [r4, #0]
 8000d88:	f015 0506 	ands.w	r5, r5, #6
 8000d8c:	d107      	bne.n	8000d9e <_printf_common+0x52>
 8000d8e:	f104 0a19 	add.w	sl, r4, #25
 8000d92:	68e3      	ldr	r3, [r4, #12]
 8000d94:	f8d9 2000 	ldr.w	r2, [r9]
 8000d98:	1a9b      	subs	r3, r3, r2
 8000d9a:	42ab      	cmp	r3, r5
 8000d9c:	dc28      	bgt.n	8000df0 <_printf_common+0xa4>
 8000d9e:	f894 3043 	ldrb.w	r3, [r4, #67]	; 0x43
 8000da2:	6822      	ldr	r2, [r4, #0]
 8000da4:	3300      	adds	r3, #0
 8000da6:	bf18      	it	ne
 8000da8:	2301      	movne	r3, #1
 8000daa:	0692      	lsls	r2, r2, #26
 8000dac:	d42d      	bmi.n	8000e0a <_printf_common+0xbe>
 8000dae:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8000db2:	4639      	mov	r1, r7
 8000db4:	4630      	mov	r0, r6
 8000db6:	47c0      	blx	r8
 8000db8:	3001      	adds	r0, #1
 8000dba:	d020      	beq.n	8000dfe <_printf_common+0xb2>
 8000dbc:	6823      	ldr	r3, [r4, #0]
 8000dbe:	68e5      	ldr	r5, [r4, #12]
 8000dc0:	f8d9 2000 	ldr.w	r2, [r9]
 8000dc4:	f003 0306 	and.w	r3, r3, #6
 8000dc8:	2b04      	cmp	r3, #4
 8000dca:	bf08      	it	eq
 8000dcc:	1aad      	subeq	r5, r5, r2
 8000dce:	68a3      	ldr	r3, [r4, #8]
 8000dd0:	6922      	ldr	r2, [r4, #16]
 8000dd2:	bf0c      	ite	eq
 8000dd4:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8000dd8:	2500      	movne	r5, #0
 8000dda:	4293      	cmp	r3, r2
 8000ddc:	bfc4      	itt	gt
 8000dde:	1a9b      	subgt	r3, r3, r2
 8000de0:	18ed      	addgt	r5, r5, r3
 8000de2:	f04f 0900 	mov.w	r9, #0
 8000de6:	341a      	adds	r4, #26
 8000de8:	454d      	cmp	r5, r9
 8000dea:	d11a      	bne.n	8000e22 <_printf_common+0xd6>
 8000dec:	2000      	movs	r0, #0
 8000dee:	e008      	b.n	8000e02 <_printf_common+0xb6>
 8000df0:	2301      	movs	r3, #1
 8000df2:	4652      	mov	r2, sl
 8000df4:	4639      	mov	r1, r7
 8000df6:	4630      	mov	r0, r6
 8000df8:	47c0      	blx	r8
 8000dfa:	3001      	adds	r0, #1
 8000dfc:	d103      	bne.n	8000e06 <_printf_common+0xba>
 8000dfe:	f04f 30ff 	mov.w	r0, #4294967295
 8000e02:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000e06:	3501      	adds	r5, #1
 8000e08:	e7c3      	b.n	8000d92 <_printf_common+0x46>
 8000e0a:	18e1      	adds	r1, r4, r3
 8000e0c:	1c5a      	adds	r2, r3, #1
 8000e0e:	2030      	movs	r0, #48	; 0x30
 8000e10:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8000e14:	4422      	add	r2, r4
 8000e16:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8000e1a:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8000e1e:	3302      	adds	r3, #2
 8000e20:	e7c5      	b.n	8000dae <_printf_common+0x62>
 8000e22:	2301      	movs	r3, #1
 8000e24:	4622      	mov	r2, r4
 8000e26:	4639      	mov	r1, r7
 8000e28:	4630      	mov	r0, r6
 8000e2a:	47c0      	blx	r8
 8000e2c:	3001      	adds	r0, #1
 8000e2e:	d0e6      	beq.n	8000dfe <_printf_common+0xb2>
 8000e30:	f109 0901 	add.w	r9, r9, #1
 8000e34:	e7d8      	b.n	8000de8 <_printf_common+0x9c>
	...

08000e38 <_printf_i>:
 8000e38:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8000e3c:	f101 0c43 	add.w	ip, r1, #67	; 0x43
 8000e40:	460c      	mov	r4, r1
 8000e42:	7e09      	ldrb	r1, [r1, #24]
 8000e44:	b085      	sub	sp, #20
 8000e46:	296e      	cmp	r1, #110	; 0x6e
 8000e48:	4617      	mov	r7, r2
 8000e4a:	4606      	mov	r6, r0
 8000e4c:	4698      	mov	r8, r3
 8000e4e:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8000e50:	f000 80b3 	beq.w	8000fba <_printf_i+0x182>
 8000e54:	d822      	bhi.n	8000e9c <_printf_i+0x64>
 8000e56:	2963      	cmp	r1, #99	; 0x63
 8000e58:	d036      	beq.n	8000ec8 <_printf_i+0x90>
 8000e5a:	d80a      	bhi.n	8000e72 <_printf_i+0x3a>
 8000e5c:	2900      	cmp	r1, #0
 8000e5e:	f000 80b9 	beq.w	8000fd4 <_printf_i+0x19c>
 8000e62:	2958      	cmp	r1, #88	; 0x58
 8000e64:	f000 8083 	beq.w	8000f6e <_printf_i+0x136>
 8000e68:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8000e6c:	f884 1042 	strb.w	r1, [r4, #66]	; 0x42
 8000e70:	e032      	b.n	8000ed8 <_printf_i+0xa0>
 8000e72:	2964      	cmp	r1, #100	; 0x64
 8000e74:	d001      	beq.n	8000e7a <_printf_i+0x42>
 8000e76:	2969      	cmp	r1, #105	; 0x69
 8000e78:	d1f6      	bne.n	8000e68 <_printf_i+0x30>
 8000e7a:	6820      	ldr	r0, [r4, #0]
 8000e7c:	6813      	ldr	r3, [r2, #0]
 8000e7e:	0605      	lsls	r5, r0, #24
 8000e80:	f103 0104 	add.w	r1, r3, #4
 8000e84:	d52a      	bpl.n	8000edc <_printf_i+0xa4>
 8000e86:	681b      	ldr	r3, [r3, #0]
 8000e88:	6011      	str	r1, [r2, #0]
 8000e8a:	2b00      	cmp	r3, #0
 8000e8c:	da03      	bge.n	8000e96 <_printf_i+0x5e>
 8000e8e:	222d      	movs	r2, #45	; 0x2d
 8000e90:	425b      	negs	r3, r3
 8000e92:	f884 2043 	strb.w	r2, [r4, #67]	; 0x43
 8000e96:	486f      	ldr	r0, [pc, #444]	; (8001054 <_printf_i+0x21c>)
 8000e98:	220a      	movs	r2, #10
 8000e9a:	e039      	b.n	8000f10 <_printf_i+0xd8>
 8000e9c:	2973      	cmp	r1, #115	; 0x73
 8000e9e:	f000 809d 	beq.w	8000fdc <_printf_i+0x1a4>
 8000ea2:	d808      	bhi.n	8000eb6 <_printf_i+0x7e>
 8000ea4:	296f      	cmp	r1, #111	; 0x6f
 8000ea6:	d020      	beq.n	8000eea <_printf_i+0xb2>
 8000ea8:	2970      	cmp	r1, #112	; 0x70
 8000eaa:	d1dd      	bne.n	8000e68 <_printf_i+0x30>
 8000eac:	6823      	ldr	r3, [r4, #0]
 8000eae:	f043 0320 	orr.w	r3, r3, #32
 8000eb2:	6023      	str	r3, [r4, #0]
 8000eb4:	e003      	b.n	8000ebe <_printf_i+0x86>
 8000eb6:	2975      	cmp	r1, #117	; 0x75
 8000eb8:	d017      	beq.n	8000eea <_printf_i+0xb2>
 8000eba:	2978      	cmp	r1, #120	; 0x78
 8000ebc:	d1d4      	bne.n	8000e68 <_printf_i+0x30>
 8000ebe:	2378      	movs	r3, #120	; 0x78
 8000ec0:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 8000ec4:	4864      	ldr	r0, [pc, #400]	; (8001058 <_printf_i+0x220>)
 8000ec6:	e055      	b.n	8000f74 <_printf_i+0x13c>
 8000ec8:	6813      	ldr	r3, [r2, #0]
 8000eca:	1d19      	adds	r1, r3, #4
 8000ecc:	681b      	ldr	r3, [r3, #0]
 8000ece:	6011      	str	r1, [r2, #0]
 8000ed0:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8000ed4:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8000ed8:	2301      	movs	r3, #1
 8000eda:	e08c      	b.n	8000ff6 <_printf_i+0x1be>
 8000edc:	681b      	ldr	r3, [r3, #0]
 8000ede:	6011      	str	r1, [r2, #0]
 8000ee0:	f010 0f40 	tst.w	r0, #64	; 0x40
 8000ee4:	bf18      	it	ne
 8000ee6:	b21b      	sxthne	r3, r3
 8000ee8:	e7cf      	b.n	8000e8a <_printf_i+0x52>
 8000eea:	6813      	ldr	r3, [r2, #0]
 8000eec:	6825      	ldr	r5, [r4, #0]
 8000eee:	1d18      	adds	r0, r3, #4
 8000ef0:	6010      	str	r0, [r2, #0]
 8000ef2:	0628      	lsls	r0, r5, #24
 8000ef4:	d501      	bpl.n	8000efa <_printf_i+0xc2>
 8000ef6:	681b      	ldr	r3, [r3, #0]
 8000ef8:	e002      	b.n	8000f00 <_printf_i+0xc8>
 8000efa:	0668      	lsls	r0, r5, #25
 8000efc:	d5fb      	bpl.n	8000ef6 <_printf_i+0xbe>
 8000efe:	881b      	ldrh	r3, [r3, #0]
 8000f00:	4854      	ldr	r0, [pc, #336]	; (8001054 <_printf_i+0x21c>)
 8000f02:	296f      	cmp	r1, #111	; 0x6f
 8000f04:	bf14      	ite	ne
 8000f06:	220a      	movne	r2, #10
 8000f08:	2208      	moveq	r2, #8
 8000f0a:	2100      	movs	r1, #0
 8000f0c:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 8000f10:	6865      	ldr	r5, [r4, #4]
 8000f12:	60a5      	str	r5, [r4, #8]
 8000f14:	2d00      	cmp	r5, #0
 8000f16:	f2c0 8095 	blt.w	8001044 <_printf_i+0x20c>
 8000f1a:	6821      	ldr	r1, [r4, #0]
 8000f1c:	f021 0104 	bic.w	r1, r1, #4
 8000f20:	6021      	str	r1, [r4, #0]
 8000f22:	2b00      	cmp	r3, #0
 8000f24:	d13d      	bne.n	8000fa2 <_printf_i+0x16a>
 8000f26:	2d00      	cmp	r5, #0
 8000f28:	f040 808e 	bne.w	8001048 <_printf_i+0x210>
 8000f2c:	4665      	mov	r5, ip
 8000f2e:	2a08      	cmp	r2, #8
 8000f30:	d10b      	bne.n	8000f4a <_printf_i+0x112>
 8000f32:	6823      	ldr	r3, [r4, #0]
 8000f34:	07db      	lsls	r3, r3, #31
 8000f36:	d508      	bpl.n	8000f4a <_printf_i+0x112>
 8000f38:	6923      	ldr	r3, [r4, #16]
 8000f3a:	6862      	ldr	r2, [r4, #4]
 8000f3c:	429a      	cmp	r2, r3
 8000f3e:	bfde      	ittt	le
 8000f40:	2330      	movle	r3, #48	; 0x30
 8000f42:	f805 3c01 	strble.w	r3, [r5, #-1]
 8000f46:	f105 35ff 	addle.w	r5, r5, #4294967295
 8000f4a:	ebac 0305 	sub.w	r3, ip, r5
 8000f4e:	6123      	str	r3, [r4, #16]
 8000f50:	f8cd 8000 	str.w	r8, [sp]
 8000f54:	463b      	mov	r3, r7
 8000f56:	aa03      	add	r2, sp, #12
 8000f58:	4621      	mov	r1, r4
 8000f5a:	4630      	mov	r0, r6
 8000f5c:	f7ff fef6 	bl	8000d4c <_printf_common>
 8000f60:	3001      	adds	r0, #1
 8000f62:	d14d      	bne.n	8001000 <_printf_i+0x1c8>
 8000f64:	f04f 30ff 	mov.w	r0, #4294967295
 8000f68:	b005      	add	sp, #20
 8000f6a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8000f6e:	4839      	ldr	r0, [pc, #228]	; (8001054 <_printf_i+0x21c>)
 8000f70:	f884 1045 	strb.w	r1, [r4, #69]	; 0x45
 8000f74:	6813      	ldr	r3, [r2, #0]
 8000f76:	6821      	ldr	r1, [r4, #0]
 8000f78:	1d1d      	adds	r5, r3, #4
 8000f7a:	681b      	ldr	r3, [r3, #0]
 8000f7c:	6015      	str	r5, [r2, #0]
 8000f7e:	060a      	lsls	r2, r1, #24
 8000f80:	d50b      	bpl.n	8000f9a <_printf_i+0x162>
 8000f82:	07ca      	lsls	r2, r1, #31
 8000f84:	bf44      	itt	mi
 8000f86:	f041 0120 	orrmi.w	r1, r1, #32
 8000f8a:	6021      	strmi	r1, [r4, #0]
 8000f8c:	b91b      	cbnz	r3, 8000f96 <_printf_i+0x15e>
 8000f8e:	6822      	ldr	r2, [r4, #0]
 8000f90:	f022 0220 	bic.w	r2, r2, #32
 8000f94:	6022      	str	r2, [r4, #0]
 8000f96:	2210      	movs	r2, #16
 8000f98:	e7b7      	b.n	8000f0a <_printf_i+0xd2>
 8000f9a:	064d      	lsls	r5, r1, #25
 8000f9c:	bf48      	it	mi
 8000f9e:	b29b      	uxthmi	r3, r3
 8000fa0:	e7ef      	b.n	8000f82 <_printf_i+0x14a>
 8000fa2:	4665      	mov	r5, ip
 8000fa4:	fbb3 f1f2 	udiv	r1, r3, r2
 8000fa8:	fb02 3311 	mls	r3, r2, r1, r3
 8000fac:	5cc3      	ldrb	r3, [r0, r3]
 8000fae:	f805 3d01 	strb.w	r3, [r5, #-1]!
 8000fb2:	460b      	mov	r3, r1
 8000fb4:	2900      	cmp	r1, #0
 8000fb6:	d1f5      	bne.n	8000fa4 <_printf_i+0x16c>
 8000fb8:	e7b9      	b.n	8000f2e <_printf_i+0xf6>
 8000fba:	6813      	ldr	r3, [r2, #0]
 8000fbc:	6825      	ldr	r5, [r4, #0]
 8000fbe:	6961      	ldr	r1, [r4, #20]
 8000fc0:	1d18      	adds	r0, r3, #4
 8000fc2:	6010      	str	r0, [r2, #0]
 8000fc4:	0628      	lsls	r0, r5, #24
 8000fc6:	681b      	ldr	r3, [r3, #0]
 8000fc8:	d501      	bpl.n	8000fce <_printf_i+0x196>
 8000fca:	6019      	str	r1, [r3, #0]
 8000fcc:	e002      	b.n	8000fd4 <_printf_i+0x19c>
 8000fce:	066a      	lsls	r2, r5, #25
 8000fd0:	d5fb      	bpl.n	8000fca <_printf_i+0x192>
 8000fd2:	8019      	strh	r1, [r3, #0]
 8000fd4:	2300      	movs	r3, #0
 8000fd6:	6123      	str	r3, [r4, #16]
 8000fd8:	4665      	mov	r5, ip
 8000fda:	e7b9      	b.n	8000f50 <_printf_i+0x118>
 8000fdc:	6813      	ldr	r3, [r2, #0]
 8000fde:	1d19      	adds	r1, r3, #4
 8000fe0:	6011      	str	r1, [r2, #0]
 8000fe2:	681d      	ldr	r5, [r3, #0]
 8000fe4:	6862      	ldr	r2, [r4, #4]
 8000fe6:	2100      	movs	r1, #0
 8000fe8:	4628      	mov	r0, r5
 8000fea:	f7ff f901 	bl	80001f0 <memchr>
 8000fee:	b108      	cbz	r0, 8000ff4 <_printf_i+0x1bc>
 8000ff0:	1b40      	subs	r0, r0, r5
 8000ff2:	6060      	str	r0, [r4, #4]
 8000ff4:	6863      	ldr	r3, [r4, #4]
 8000ff6:	6123      	str	r3, [r4, #16]
 8000ff8:	2300      	movs	r3, #0
 8000ffa:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8000ffe:	e7a7      	b.n	8000f50 <_printf_i+0x118>
 8001000:	6923      	ldr	r3, [r4, #16]
 8001002:	462a      	mov	r2, r5
 8001004:	4639      	mov	r1, r7
 8001006:	4630      	mov	r0, r6
 8001008:	47c0      	blx	r8
 800100a:	3001      	adds	r0, #1
 800100c:	d0aa      	beq.n	8000f64 <_printf_i+0x12c>
 800100e:	6823      	ldr	r3, [r4, #0]
 8001010:	079b      	lsls	r3, r3, #30
 8001012:	d413      	bmi.n	800103c <_printf_i+0x204>
 8001014:	68e0      	ldr	r0, [r4, #12]
 8001016:	9b03      	ldr	r3, [sp, #12]
 8001018:	4298      	cmp	r0, r3
 800101a:	bfb8      	it	lt
 800101c:	4618      	movlt	r0, r3
 800101e:	e7a3      	b.n	8000f68 <_printf_i+0x130>
 8001020:	2301      	movs	r3, #1
 8001022:	464a      	mov	r2, r9
 8001024:	4639      	mov	r1, r7
 8001026:	4630      	mov	r0, r6
 8001028:	47c0      	blx	r8
 800102a:	3001      	adds	r0, #1
 800102c:	d09a      	beq.n	8000f64 <_printf_i+0x12c>
 800102e:	3501      	adds	r5, #1
 8001030:	68e3      	ldr	r3, [r4, #12]
 8001032:	9a03      	ldr	r2, [sp, #12]
 8001034:	1a9b      	subs	r3, r3, r2
 8001036:	42ab      	cmp	r3, r5
 8001038:	dcf2      	bgt.n	8001020 <_printf_i+0x1e8>
 800103a:	e7eb      	b.n	8001014 <_printf_i+0x1dc>
 800103c:	2500      	movs	r5, #0
 800103e:	f104 0919 	add.w	r9, r4, #25
 8001042:	e7f5      	b.n	8001030 <_printf_i+0x1f8>
 8001044:	2b00      	cmp	r3, #0
 8001046:	d1ac      	bne.n	8000fa2 <_printf_i+0x16a>
 8001048:	7803      	ldrb	r3, [r0, #0]
 800104a:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 800104e:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8001052:	e76c      	b.n	8000f2e <_printf_i+0xf6>
 8001054:	080016d5 	.word	0x080016d5
 8001058:	080016e6 	.word	0x080016e6

0800105c <_putc_r>:
 800105c:	b570      	push	{r4, r5, r6, lr}
 800105e:	460d      	mov	r5, r1
 8001060:	4614      	mov	r4, r2
 8001062:	4606      	mov	r6, r0
 8001064:	b118      	cbz	r0, 800106e <_putc_r+0x12>
 8001066:	6983      	ldr	r3, [r0, #24]
 8001068:	b90b      	cbnz	r3, 800106e <_putc_r+0x12>
 800106a:	f7ff fbf5 	bl	8000858 <__sinit>
 800106e:	4b13      	ldr	r3, [pc, #76]	; (80010bc <_putc_r+0x60>)
 8001070:	429c      	cmp	r4, r3
 8001072:	d112      	bne.n	800109a <_putc_r+0x3e>
 8001074:	6874      	ldr	r4, [r6, #4]
 8001076:	68a3      	ldr	r3, [r4, #8]
 8001078:	3b01      	subs	r3, #1
 800107a:	2b00      	cmp	r3, #0
 800107c:	60a3      	str	r3, [r4, #8]
 800107e:	da16      	bge.n	80010ae <_putc_r+0x52>
 8001080:	69a2      	ldr	r2, [r4, #24]
 8001082:	4293      	cmp	r3, r2
 8001084:	db02      	blt.n	800108c <_putc_r+0x30>
 8001086:	b2eb      	uxtb	r3, r5
 8001088:	2b0a      	cmp	r3, #10
 800108a:	d110      	bne.n	80010ae <_putc_r+0x52>
 800108c:	4622      	mov	r2, r4
 800108e:	4629      	mov	r1, r5
 8001090:	4630      	mov	r0, r6
 8001092:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8001096:	f000 b86b 	b.w	8001170 <__swbuf_r>
 800109a:	4b09      	ldr	r3, [pc, #36]	; (80010c0 <_putc_r+0x64>)
 800109c:	429c      	cmp	r4, r3
 800109e:	d101      	bne.n	80010a4 <_putc_r+0x48>
 80010a0:	68b4      	ldr	r4, [r6, #8]
 80010a2:	e7e8      	b.n	8001076 <_putc_r+0x1a>
 80010a4:	4b07      	ldr	r3, [pc, #28]	; (80010c4 <_putc_r+0x68>)
 80010a6:	429c      	cmp	r4, r3
 80010a8:	bf08      	it	eq
 80010aa:	68f4      	ldreq	r4, [r6, #12]
 80010ac:	e7e3      	b.n	8001076 <_putc_r+0x1a>
 80010ae:	6823      	ldr	r3, [r4, #0]
 80010b0:	1c5a      	adds	r2, r3, #1
 80010b2:	6022      	str	r2, [r4, #0]
 80010b4:	701d      	strb	r5, [r3, #0]
 80010b6:	b2e8      	uxtb	r0, r5
 80010b8:	bd70      	pop	{r4, r5, r6, pc}
 80010ba:	bf00      	nop
 80010bc:	08001684 	.word	0x08001684
 80010c0:	080016a4 	.word	0x080016a4
 80010c4:	08001664 	.word	0x08001664

080010c8 <_sbrk_r>:
 80010c8:	b538      	push	{r3, r4, r5, lr}
 80010ca:	4c06      	ldr	r4, [pc, #24]	; (80010e4 <_sbrk_r+0x1c>)
 80010cc:	2300      	movs	r3, #0
 80010ce:	4605      	mov	r5, r0
 80010d0:	4608      	mov	r0, r1
 80010d2:	6023      	str	r3, [r4, #0]
 80010d4:	f7ff fa98 	bl	8000608 <_sbrk>
 80010d8:	1c43      	adds	r3, r0, #1
 80010da:	d102      	bne.n	80010e2 <_sbrk_r+0x1a>
 80010dc:	6823      	ldr	r3, [r4, #0]
 80010de:	b103      	cbz	r3, 80010e2 <_sbrk_r+0x1a>
 80010e0:	602b      	str	r3, [r5, #0]
 80010e2:	bd38      	pop	{r3, r4, r5, pc}
 80010e4:	200000d4 	.word	0x200000d4

080010e8 <__sread>:
 80010e8:	b510      	push	{r4, lr}
 80010ea:	460c      	mov	r4, r1
 80010ec:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80010f0:	f000 fa48 	bl	8001584 <_read_r>
 80010f4:	2800      	cmp	r0, #0
 80010f6:	bfab      	itete	ge
 80010f8:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 80010fa:	89a3      	ldrhlt	r3, [r4, #12]
 80010fc:	181b      	addge	r3, r3, r0
 80010fe:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 8001102:	bfac      	ite	ge
 8001104:	6563      	strge	r3, [r4, #84]	; 0x54
 8001106:	81a3      	strhlt	r3, [r4, #12]
 8001108:	bd10      	pop	{r4, pc}

0800110a <__swrite>:
 800110a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800110e:	461f      	mov	r7, r3
 8001110:	898b      	ldrh	r3, [r1, #12]
 8001112:	05db      	lsls	r3, r3, #23
 8001114:	4605      	mov	r5, r0
 8001116:	460c      	mov	r4, r1
 8001118:	4616      	mov	r6, r2
 800111a:	d505      	bpl.n	8001128 <__swrite+0x1e>
 800111c:	2302      	movs	r3, #2
 800111e:	2200      	movs	r2, #0
 8001120:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8001124:	f000 f9b6 	bl	8001494 <_lseek_r>
 8001128:	89a3      	ldrh	r3, [r4, #12]
 800112a:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 800112e:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8001132:	81a3      	strh	r3, [r4, #12]
 8001134:	4632      	mov	r2, r6
 8001136:	463b      	mov	r3, r7
 8001138:	4628      	mov	r0, r5
 800113a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800113e:	f000 b869 	b.w	8001214 <_write_r>

08001142 <__sseek>:
 8001142:	b510      	push	{r4, lr}
 8001144:	460c      	mov	r4, r1
 8001146:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800114a:	f000 f9a3 	bl	8001494 <_lseek_r>
 800114e:	1c43      	adds	r3, r0, #1
 8001150:	89a3      	ldrh	r3, [r4, #12]
 8001152:	bf15      	itete	ne
 8001154:	6560      	strne	r0, [r4, #84]	; 0x54
 8001156:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 800115a:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 800115e:	81a3      	strheq	r3, [r4, #12]
 8001160:	bf18      	it	ne
 8001162:	81a3      	strhne	r3, [r4, #12]
 8001164:	bd10      	pop	{r4, pc}

08001166 <__sclose>:
 8001166:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800116a:	f000 b8d3 	b.w	8001314 <_close_r>
	...

08001170 <__swbuf_r>:
 8001170:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001172:	460e      	mov	r6, r1
 8001174:	4614      	mov	r4, r2
 8001176:	4605      	mov	r5, r0
 8001178:	b118      	cbz	r0, 8001182 <__swbuf_r+0x12>
 800117a:	6983      	ldr	r3, [r0, #24]
 800117c:	b90b      	cbnz	r3, 8001182 <__swbuf_r+0x12>
 800117e:	f7ff fb6b 	bl	8000858 <__sinit>
 8001182:	4b21      	ldr	r3, [pc, #132]	; (8001208 <__swbuf_r+0x98>)
 8001184:	429c      	cmp	r4, r3
 8001186:	d12a      	bne.n	80011de <__swbuf_r+0x6e>
 8001188:	686c      	ldr	r4, [r5, #4]
 800118a:	69a3      	ldr	r3, [r4, #24]
 800118c:	60a3      	str	r3, [r4, #8]
 800118e:	89a3      	ldrh	r3, [r4, #12]
 8001190:	071a      	lsls	r2, r3, #28
 8001192:	d52e      	bpl.n	80011f2 <__swbuf_r+0x82>
 8001194:	6923      	ldr	r3, [r4, #16]
 8001196:	b363      	cbz	r3, 80011f2 <__swbuf_r+0x82>
 8001198:	6923      	ldr	r3, [r4, #16]
 800119a:	6820      	ldr	r0, [r4, #0]
 800119c:	1ac0      	subs	r0, r0, r3
 800119e:	6963      	ldr	r3, [r4, #20]
 80011a0:	b2f6      	uxtb	r6, r6
 80011a2:	4283      	cmp	r3, r0
 80011a4:	4637      	mov	r7, r6
 80011a6:	dc04      	bgt.n	80011b2 <__swbuf_r+0x42>
 80011a8:	4621      	mov	r1, r4
 80011aa:	4628      	mov	r0, r5
 80011ac:	f000 f948 	bl	8001440 <_fflush_r>
 80011b0:	bb28      	cbnz	r0, 80011fe <__swbuf_r+0x8e>
 80011b2:	68a3      	ldr	r3, [r4, #8]
 80011b4:	3b01      	subs	r3, #1
 80011b6:	60a3      	str	r3, [r4, #8]
 80011b8:	6823      	ldr	r3, [r4, #0]
 80011ba:	1c5a      	adds	r2, r3, #1
 80011bc:	6022      	str	r2, [r4, #0]
 80011be:	701e      	strb	r6, [r3, #0]
 80011c0:	6963      	ldr	r3, [r4, #20]
 80011c2:	3001      	adds	r0, #1
 80011c4:	4283      	cmp	r3, r0
 80011c6:	d004      	beq.n	80011d2 <__swbuf_r+0x62>
 80011c8:	89a3      	ldrh	r3, [r4, #12]
 80011ca:	07db      	lsls	r3, r3, #31
 80011cc:	d519      	bpl.n	8001202 <__swbuf_r+0x92>
 80011ce:	2e0a      	cmp	r6, #10
 80011d0:	d117      	bne.n	8001202 <__swbuf_r+0x92>
 80011d2:	4621      	mov	r1, r4
 80011d4:	4628      	mov	r0, r5
 80011d6:	f000 f933 	bl	8001440 <_fflush_r>
 80011da:	b190      	cbz	r0, 8001202 <__swbuf_r+0x92>
 80011dc:	e00f      	b.n	80011fe <__swbuf_r+0x8e>
 80011de:	4b0b      	ldr	r3, [pc, #44]	; (800120c <__swbuf_r+0x9c>)
 80011e0:	429c      	cmp	r4, r3
 80011e2:	d101      	bne.n	80011e8 <__swbuf_r+0x78>
 80011e4:	68ac      	ldr	r4, [r5, #8]
 80011e6:	e7d0      	b.n	800118a <__swbuf_r+0x1a>
 80011e8:	4b09      	ldr	r3, [pc, #36]	; (8001210 <__swbuf_r+0xa0>)
 80011ea:	429c      	cmp	r4, r3
 80011ec:	bf08      	it	eq
 80011ee:	68ec      	ldreq	r4, [r5, #12]
 80011f0:	e7cb      	b.n	800118a <__swbuf_r+0x1a>
 80011f2:	4621      	mov	r1, r4
 80011f4:	4628      	mov	r0, r5
 80011f6:	f000 f81f 	bl	8001238 <__swsetup_r>
 80011fa:	2800      	cmp	r0, #0
 80011fc:	d0cc      	beq.n	8001198 <__swbuf_r+0x28>
 80011fe:	f04f 37ff 	mov.w	r7, #4294967295
 8001202:	4638      	mov	r0, r7
 8001204:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8001206:	bf00      	nop
 8001208:	08001684 	.word	0x08001684
 800120c:	080016a4 	.word	0x080016a4
 8001210:	08001664 	.word	0x08001664

08001214 <_write_r>:
 8001214:	b538      	push	{r3, r4, r5, lr}
 8001216:	4c07      	ldr	r4, [pc, #28]	; (8001234 <_write_r+0x20>)
 8001218:	4605      	mov	r5, r0
 800121a:	4608      	mov	r0, r1
 800121c:	4611      	mov	r1, r2
 800121e:	2200      	movs	r2, #0
 8001220:	6022      	str	r2, [r4, #0]
 8001222:	461a      	mov	r2, r3
 8001224:	f7ff f99f 	bl	8000566 <_write>
 8001228:	1c43      	adds	r3, r0, #1
 800122a:	d102      	bne.n	8001232 <_write_r+0x1e>
 800122c:	6823      	ldr	r3, [r4, #0]
 800122e:	b103      	cbz	r3, 8001232 <_write_r+0x1e>
 8001230:	602b      	str	r3, [r5, #0]
 8001232:	bd38      	pop	{r3, r4, r5, pc}
 8001234:	200000d4 	.word	0x200000d4

08001238 <__swsetup_r>:
 8001238:	4b32      	ldr	r3, [pc, #200]	; (8001304 <__swsetup_r+0xcc>)
 800123a:	b570      	push	{r4, r5, r6, lr}
 800123c:	681d      	ldr	r5, [r3, #0]
 800123e:	4606      	mov	r6, r0
 8001240:	460c      	mov	r4, r1
 8001242:	b125      	cbz	r5, 800124e <__swsetup_r+0x16>
 8001244:	69ab      	ldr	r3, [r5, #24]
 8001246:	b913      	cbnz	r3, 800124e <__swsetup_r+0x16>
 8001248:	4628      	mov	r0, r5
 800124a:	f7ff fb05 	bl	8000858 <__sinit>
 800124e:	4b2e      	ldr	r3, [pc, #184]	; (8001308 <__swsetup_r+0xd0>)
 8001250:	429c      	cmp	r4, r3
 8001252:	d10f      	bne.n	8001274 <__swsetup_r+0x3c>
 8001254:	686c      	ldr	r4, [r5, #4]
 8001256:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800125a:	b29a      	uxth	r2, r3
 800125c:	0715      	lsls	r5, r2, #28
 800125e:	d42c      	bmi.n	80012ba <__swsetup_r+0x82>
 8001260:	06d0      	lsls	r0, r2, #27
 8001262:	d411      	bmi.n	8001288 <__swsetup_r+0x50>
 8001264:	2209      	movs	r2, #9
 8001266:	6032      	str	r2, [r6, #0]
 8001268:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800126c:	81a3      	strh	r3, [r4, #12]
 800126e:	f04f 30ff 	mov.w	r0, #4294967295
 8001272:	e03e      	b.n	80012f2 <__swsetup_r+0xba>
 8001274:	4b25      	ldr	r3, [pc, #148]	; (800130c <__swsetup_r+0xd4>)
 8001276:	429c      	cmp	r4, r3
 8001278:	d101      	bne.n	800127e <__swsetup_r+0x46>
 800127a:	68ac      	ldr	r4, [r5, #8]
 800127c:	e7eb      	b.n	8001256 <__swsetup_r+0x1e>
 800127e:	4b24      	ldr	r3, [pc, #144]	; (8001310 <__swsetup_r+0xd8>)
 8001280:	429c      	cmp	r4, r3
 8001282:	bf08      	it	eq
 8001284:	68ec      	ldreq	r4, [r5, #12]
 8001286:	e7e6      	b.n	8001256 <__swsetup_r+0x1e>
 8001288:	0751      	lsls	r1, r2, #29
 800128a:	d512      	bpl.n	80012b2 <__swsetup_r+0x7a>
 800128c:	6b61      	ldr	r1, [r4, #52]	; 0x34
 800128e:	b141      	cbz	r1, 80012a2 <__swsetup_r+0x6a>
 8001290:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8001294:	4299      	cmp	r1, r3
 8001296:	d002      	beq.n	800129e <__swsetup_r+0x66>
 8001298:	4630      	mov	r0, r6
 800129a:	f7ff fb6f 	bl	800097c <_free_r>
 800129e:	2300      	movs	r3, #0
 80012a0:	6363      	str	r3, [r4, #52]	; 0x34
 80012a2:	89a3      	ldrh	r3, [r4, #12]
 80012a4:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 80012a8:	81a3      	strh	r3, [r4, #12]
 80012aa:	2300      	movs	r3, #0
 80012ac:	6063      	str	r3, [r4, #4]
 80012ae:	6923      	ldr	r3, [r4, #16]
 80012b0:	6023      	str	r3, [r4, #0]
 80012b2:	89a3      	ldrh	r3, [r4, #12]
 80012b4:	f043 0308 	orr.w	r3, r3, #8
 80012b8:	81a3      	strh	r3, [r4, #12]
 80012ba:	6923      	ldr	r3, [r4, #16]
 80012bc:	b94b      	cbnz	r3, 80012d2 <__swsetup_r+0x9a>
 80012be:	89a3      	ldrh	r3, [r4, #12]
 80012c0:	f403 7320 	and.w	r3, r3, #640	; 0x280
 80012c4:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 80012c8:	d003      	beq.n	80012d2 <__swsetup_r+0x9a>
 80012ca:	4621      	mov	r1, r4
 80012cc:	4630      	mov	r0, r6
 80012ce:	f000 f917 	bl	8001500 <__smakebuf_r>
 80012d2:	89a2      	ldrh	r2, [r4, #12]
 80012d4:	f012 0301 	ands.w	r3, r2, #1
 80012d8:	d00c      	beq.n	80012f4 <__swsetup_r+0xbc>
 80012da:	2300      	movs	r3, #0
 80012dc:	60a3      	str	r3, [r4, #8]
 80012de:	6963      	ldr	r3, [r4, #20]
 80012e0:	425b      	negs	r3, r3
 80012e2:	61a3      	str	r3, [r4, #24]
 80012e4:	6923      	ldr	r3, [r4, #16]
 80012e6:	b953      	cbnz	r3, 80012fe <__swsetup_r+0xc6>
 80012e8:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80012ec:	f013 0080 	ands.w	r0, r3, #128	; 0x80
 80012f0:	d1ba      	bne.n	8001268 <__swsetup_r+0x30>
 80012f2:	bd70      	pop	{r4, r5, r6, pc}
 80012f4:	0792      	lsls	r2, r2, #30
 80012f6:	bf58      	it	pl
 80012f8:	6963      	ldrpl	r3, [r4, #20]
 80012fa:	60a3      	str	r3, [r4, #8]
 80012fc:	e7f2      	b.n	80012e4 <__swsetup_r+0xac>
 80012fe:	2000      	movs	r0, #0
 8001300:	e7f7      	b.n	80012f2 <__swsetup_r+0xba>
 8001302:	bf00      	nop
 8001304:	20000048 	.word	0x20000048
 8001308:	08001684 	.word	0x08001684
 800130c:	080016a4 	.word	0x080016a4
 8001310:	08001664 	.word	0x08001664

08001314 <_close_r>:
 8001314:	b538      	push	{r3, r4, r5, lr}
 8001316:	4c06      	ldr	r4, [pc, #24]	; (8001330 <_close_r+0x1c>)
 8001318:	2300      	movs	r3, #0
 800131a:	4605      	mov	r5, r0
 800131c:	4608      	mov	r0, r1
 800131e:	6023      	str	r3, [r4, #0]
 8001320:	f7ff f93d 	bl	800059e <_close>
 8001324:	1c43      	adds	r3, r0, #1
 8001326:	d102      	bne.n	800132e <_close_r+0x1a>
 8001328:	6823      	ldr	r3, [r4, #0]
 800132a:	b103      	cbz	r3, 800132e <_close_r+0x1a>
 800132c:	602b      	str	r3, [r5, #0]
 800132e:	bd38      	pop	{r3, r4, r5, pc}
 8001330:	200000d4 	.word	0x200000d4

08001334 <__sflush_r>:
 8001334:	898a      	ldrh	r2, [r1, #12]
 8001336:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800133a:	4605      	mov	r5, r0
 800133c:	0710      	lsls	r0, r2, #28
 800133e:	460c      	mov	r4, r1
 8001340:	d458      	bmi.n	80013f4 <__sflush_r+0xc0>
 8001342:	684b      	ldr	r3, [r1, #4]
 8001344:	2b00      	cmp	r3, #0
 8001346:	dc05      	bgt.n	8001354 <__sflush_r+0x20>
 8001348:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 800134a:	2b00      	cmp	r3, #0
 800134c:	dc02      	bgt.n	8001354 <__sflush_r+0x20>
 800134e:	2000      	movs	r0, #0
 8001350:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8001354:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8001356:	2e00      	cmp	r6, #0
 8001358:	d0f9      	beq.n	800134e <__sflush_r+0x1a>
 800135a:	2300      	movs	r3, #0
 800135c:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8001360:	682f      	ldr	r7, [r5, #0]
 8001362:	6a21      	ldr	r1, [r4, #32]
 8001364:	602b      	str	r3, [r5, #0]
 8001366:	d032      	beq.n	80013ce <__sflush_r+0x9a>
 8001368:	6d60      	ldr	r0, [r4, #84]	; 0x54
 800136a:	89a3      	ldrh	r3, [r4, #12]
 800136c:	075a      	lsls	r2, r3, #29
 800136e:	d505      	bpl.n	800137c <__sflush_r+0x48>
 8001370:	6863      	ldr	r3, [r4, #4]
 8001372:	1ac0      	subs	r0, r0, r3
 8001374:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8001376:	b10b      	cbz	r3, 800137c <__sflush_r+0x48>
 8001378:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800137a:	1ac0      	subs	r0, r0, r3
 800137c:	2300      	movs	r3, #0
 800137e:	4602      	mov	r2, r0
 8001380:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8001382:	6a21      	ldr	r1, [r4, #32]
 8001384:	4628      	mov	r0, r5
 8001386:	47b0      	blx	r6
 8001388:	1c43      	adds	r3, r0, #1
 800138a:	89a3      	ldrh	r3, [r4, #12]
 800138c:	d106      	bne.n	800139c <__sflush_r+0x68>
 800138e:	6829      	ldr	r1, [r5, #0]
 8001390:	291d      	cmp	r1, #29
 8001392:	d848      	bhi.n	8001426 <__sflush_r+0xf2>
 8001394:	4a29      	ldr	r2, [pc, #164]	; (800143c <__sflush_r+0x108>)
 8001396:	40ca      	lsrs	r2, r1
 8001398:	07d6      	lsls	r6, r2, #31
 800139a:	d544      	bpl.n	8001426 <__sflush_r+0xf2>
 800139c:	2200      	movs	r2, #0
 800139e:	6062      	str	r2, [r4, #4]
 80013a0:	04d9      	lsls	r1, r3, #19
 80013a2:	6922      	ldr	r2, [r4, #16]
 80013a4:	6022      	str	r2, [r4, #0]
 80013a6:	d504      	bpl.n	80013b2 <__sflush_r+0x7e>
 80013a8:	1c42      	adds	r2, r0, #1
 80013aa:	d101      	bne.n	80013b0 <__sflush_r+0x7c>
 80013ac:	682b      	ldr	r3, [r5, #0]
 80013ae:	b903      	cbnz	r3, 80013b2 <__sflush_r+0x7e>
 80013b0:	6560      	str	r0, [r4, #84]	; 0x54
 80013b2:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80013b4:	602f      	str	r7, [r5, #0]
 80013b6:	2900      	cmp	r1, #0
 80013b8:	d0c9      	beq.n	800134e <__sflush_r+0x1a>
 80013ba:	f104 0344 	add.w	r3, r4, #68	; 0x44
 80013be:	4299      	cmp	r1, r3
 80013c0:	d002      	beq.n	80013c8 <__sflush_r+0x94>
 80013c2:	4628      	mov	r0, r5
 80013c4:	f7ff fada 	bl	800097c <_free_r>
 80013c8:	2000      	movs	r0, #0
 80013ca:	6360      	str	r0, [r4, #52]	; 0x34
 80013cc:	e7c0      	b.n	8001350 <__sflush_r+0x1c>
 80013ce:	2301      	movs	r3, #1
 80013d0:	4628      	mov	r0, r5
 80013d2:	47b0      	blx	r6
 80013d4:	1c41      	adds	r1, r0, #1
 80013d6:	d1c8      	bne.n	800136a <__sflush_r+0x36>
 80013d8:	682b      	ldr	r3, [r5, #0]
 80013da:	2b00      	cmp	r3, #0
 80013dc:	d0c5      	beq.n	800136a <__sflush_r+0x36>
 80013de:	2b1d      	cmp	r3, #29
 80013e0:	d001      	beq.n	80013e6 <__sflush_r+0xb2>
 80013e2:	2b16      	cmp	r3, #22
 80013e4:	d101      	bne.n	80013ea <__sflush_r+0xb6>
 80013e6:	602f      	str	r7, [r5, #0]
 80013e8:	e7b1      	b.n	800134e <__sflush_r+0x1a>
 80013ea:	89a3      	ldrh	r3, [r4, #12]
 80013ec:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80013f0:	81a3      	strh	r3, [r4, #12]
 80013f2:	e7ad      	b.n	8001350 <__sflush_r+0x1c>
 80013f4:	690f      	ldr	r7, [r1, #16]
 80013f6:	2f00      	cmp	r7, #0
 80013f8:	d0a9      	beq.n	800134e <__sflush_r+0x1a>
 80013fa:	0793      	lsls	r3, r2, #30
 80013fc:	680e      	ldr	r6, [r1, #0]
 80013fe:	bf08      	it	eq
 8001400:	694b      	ldreq	r3, [r1, #20]
 8001402:	600f      	str	r7, [r1, #0]
 8001404:	bf18      	it	ne
 8001406:	2300      	movne	r3, #0
 8001408:	eba6 0807 	sub.w	r8, r6, r7
 800140c:	608b      	str	r3, [r1, #8]
 800140e:	f1b8 0f00 	cmp.w	r8, #0
 8001412:	dd9c      	ble.n	800134e <__sflush_r+0x1a>
 8001414:	4643      	mov	r3, r8
 8001416:	463a      	mov	r2, r7
 8001418:	6a21      	ldr	r1, [r4, #32]
 800141a:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 800141c:	4628      	mov	r0, r5
 800141e:	47b0      	blx	r6
 8001420:	2800      	cmp	r0, #0
 8001422:	dc06      	bgt.n	8001432 <__sflush_r+0xfe>
 8001424:	89a3      	ldrh	r3, [r4, #12]
 8001426:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800142a:	81a3      	strh	r3, [r4, #12]
 800142c:	f04f 30ff 	mov.w	r0, #4294967295
 8001430:	e78e      	b.n	8001350 <__sflush_r+0x1c>
 8001432:	4407      	add	r7, r0
 8001434:	eba8 0800 	sub.w	r8, r8, r0
 8001438:	e7e9      	b.n	800140e <__sflush_r+0xda>
 800143a:	bf00      	nop
 800143c:	20400001 	.word	0x20400001

08001440 <_fflush_r>:
 8001440:	b538      	push	{r3, r4, r5, lr}
 8001442:	690b      	ldr	r3, [r1, #16]
 8001444:	4605      	mov	r5, r0
 8001446:	460c      	mov	r4, r1
 8001448:	b1db      	cbz	r3, 8001482 <_fflush_r+0x42>
 800144a:	b118      	cbz	r0, 8001454 <_fflush_r+0x14>
 800144c:	6983      	ldr	r3, [r0, #24]
 800144e:	b90b      	cbnz	r3, 8001454 <_fflush_r+0x14>
 8001450:	f7ff fa02 	bl	8000858 <__sinit>
 8001454:	4b0c      	ldr	r3, [pc, #48]	; (8001488 <_fflush_r+0x48>)
 8001456:	429c      	cmp	r4, r3
 8001458:	d109      	bne.n	800146e <_fflush_r+0x2e>
 800145a:	686c      	ldr	r4, [r5, #4]
 800145c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8001460:	b17b      	cbz	r3, 8001482 <_fflush_r+0x42>
 8001462:	4621      	mov	r1, r4
 8001464:	4628      	mov	r0, r5
 8001466:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800146a:	f7ff bf63 	b.w	8001334 <__sflush_r>
 800146e:	4b07      	ldr	r3, [pc, #28]	; (800148c <_fflush_r+0x4c>)
 8001470:	429c      	cmp	r4, r3
 8001472:	d101      	bne.n	8001478 <_fflush_r+0x38>
 8001474:	68ac      	ldr	r4, [r5, #8]
 8001476:	e7f1      	b.n	800145c <_fflush_r+0x1c>
 8001478:	4b05      	ldr	r3, [pc, #20]	; (8001490 <_fflush_r+0x50>)
 800147a:	429c      	cmp	r4, r3
 800147c:	bf08      	it	eq
 800147e:	68ec      	ldreq	r4, [r5, #12]
 8001480:	e7ec      	b.n	800145c <_fflush_r+0x1c>
 8001482:	2000      	movs	r0, #0
 8001484:	bd38      	pop	{r3, r4, r5, pc}
 8001486:	bf00      	nop
 8001488:	08001684 	.word	0x08001684
 800148c:	080016a4 	.word	0x080016a4
 8001490:	08001664 	.word	0x08001664

08001494 <_lseek_r>:
 8001494:	b538      	push	{r3, r4, r5, lr}
 8001496:	4c07      	ldr	r4, [pc, #28]	; (80014b4 <_lseek_r+0x20>)
 8001498:	4605      	mov	r5, r0
 800149a:	4608      	mov	r0, r1
 800149c:	4611      	mov	r1, r2
 800149e:	2200      	movs	r2, #0
 80014a0:	6022      	str	r2, [r4, #0]
 80014a2:	461a      	mov	r2, r3
 80014a4:	f7ff f8a2 	bl	80005ec <_lseek>
 80014a8:	1c43      	adds	r3, r0, #1
 80014aa:	d102      	bne.n	80014b2 <_lseek_r+0x1e>
 80014ac:	6823      	ldr	r3, [r4, #0]
 80014ae:	b103      	cbz	r3, 80014b2 <_lseek_r+0x1e>
 80014b0:	602b      	str	r3, [r5, #0]
 80014b2:	bd38      	pop	{r3, r4, r5, pc}
 80014b4:	200000d4 	.word	0x200000d4

080014b8 <__swhatbuf_r>:
 80014b8:	b570      	push	{r4, r5, r6, lr}
 80014ba:	460e      	mov	r6, r1
 80014bc:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80014c0:	2900      	cmp	r1, #0
 80014c2:	b096      	sub	sp, #88	; 0x58
 80014c4:	4614      	mov	r4, r2
 80014c6:	461d      	mov	r5, r3
 80014c8:	da07      	bge.n	80014da <__swhatbuf_r+0x22>
 80014ca:	2300      	movs	r3, #0
 80014cc:	602b      	str	r3, [r5, #0]
 80014ce:	89b3      	ldrh	r3, [r6, #12]
 80014d0:	061a      	lsls	r2, r3, #24
 80014d2:	d410      	bmi.n	80014f6 <__swhatbuf_r+0x3e>
 80014d4:	f44f 6380 	mov.w	r3, #1024	; 0x400
 80014d8:	e00e      	b.n	80014f8 <__swhatbuf_r+0x40>
 80014da:	466a      	mov	r2, sp
 80014dc:	f000 f864 	bl	80015a8 <_fstat_r>
 80014e0:	2800      	cmp	r0, #0
 80014e2:	dbf2      	blt.n	80014ca <__swhatbuf_r+0x12>
 80014e4:	9a01      	ldr	r2, [sp, #4]
 80014e6:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 80014ea:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 80014ee:	425a      	negs	r2, r3
 80014f0:	415a      	adcs	r2, r3
 80014f2:	602a      	str	r2, [r5, #0]
 80014f4:	e7ee      	b.n	80014d4 <__swhatbuf_r+0x1c>
 80014f6:	2340      	movs	r3, #64	; 0x40
 80014f8:	2000      	movs	r0, #0
 80014fa:	6023      	str	r3, [r4, #0]
 80014fc:	b016      	add	sp, #88	; 0x58
 80014fe:	bd70      	pop	{r4, r5, r6, pc}

08001500 <__smakebuf_r>:
 8001500:	898b      	ldrh	r3, [r1, #12]
 8001502:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8001504:	079d      	lsls	r5, r3, #30
 8001506:	4606      	mov	r6, r0
 8001508:	460c      	mov	r4, r1
 800150a:	d507      	bpl.n	800151c <__smakebuf_r+0x1c>
 800150c:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8001510:	6023      	str	r3, [r4, #0]
 8001512:	6123      	str	r3, [r4, #16]
 8001514:	2301      	movs	r3, #1
 8001516:	6163      	str	r3, [r4, #20]
 8001518:	b002      	add	sp, #8
 800151a:	bd70      	pop	{r4, r5, r6, pc}
 800151c:	ab01      	add	r3, sp, #4
 800151e:	466a      	mov	r2, sp
 8001520:	f7ff ffca 	bl	80014b8 <__swhatbuf_r>
 8001524:	9900      	ldr	r1, [sp, #0]
 8001526:	4605      	mov	r5, r0
 8001528:	4630      	mov	r0, r6
 800152a:	f7ff fa75 	bl	8000a18 <_malloc_r>
 800152e:	b948      	cbnz	r0, 8001544 <__smakebuf_r+0x44>
 8001530:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8001534:	059a      	lsls	r2, r3, #22
 8001536:	d4ef      	bmi.n	8001518 <__smakebuf_r+0x18>
 8001538:	f023 0303 	bic.w	r3, r3, #3
 800153c:	f043 0302 	orr.w	r3, r3, #2
 8001540:	81a3      	strh	r3, [r4, #12]
 8001542:	e7e3      	b.n	800150c <__smakebuf_r+0xc>
 8001544:	4b0d      	ldr	r3, [pc, #52]	; (800157c <__smakebuf_r+0x7c>)
 8001546:	62b3      	str	r3, [r6, #40]	; 0x28
 8001548:	89a3      	ldrh	r3, [r4, #12]
 800154a:	6020      	str	r0, [r4, #0]
 800154c:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8001550:	81a3      	strh	r3, [r4, #12]
 8001552:	9b00      	ldr	r3, [sp, #0]
 8001554:	6163      	str	r3, [r4, #20]
 8001556:	9b01      	ldr	r3, [sp, #4]
 8001558:	6120      	str	r0, [r4, #16]
 800155a:	b15b      	cbz	r3, 8001574 <__smakebuf_r+0x74>
 800155c:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8001560:	4630      	mov	r0, r6
 8001562:	f000 f833 	bl	80015cc <_isatty_r>
 8001566:	b128      	cbz	r0, 8001574 <__smakebuf_r+0x74>
 8001568:	89a3      	ldrh	r3, [r4, #12]
 800156a:	f023 0303 	bic.w	r3, r3, #3
 800156e:	f043 0301 	orr.w	r3, r3, #1
 8001572:	81a3      	strh	r3, [r4, #12]
 8001574:	89a3      	ldrh	r3, [r4, #12]
 8001576:	431d      	orrs	r5, r3
 8001578:	81a5      	strh	r5, [r4, #12]
 800157a:	e7cd      	b.n	8001518 <__smakebuf_r+0x18>
 800157c:	08000821 	.word	0x08000821

08001580 <__malloc_lock>:
 8001580:	4770      	bx	lr

08001582 <__malloc_unlock>:
 8001582:	4770      	bx	lr

08001584 <_read_r>:
 8001584:	b538      	push	{r3, r4, r5, lr}
 8001586:	4c07      	ldr	r4, [pc, #28]	; (80015a4 <_read_r+0x20>)
 8001588:	4605      	mov	r5, r0
 800158a:	4608      	mov	r0, r1
 800158c:	4611      	mov	r1, r2
 800158e:	2200      	movs	r2, #0
 8001590:	6022      	str	r2, [r4, #0]
 8001592:	461a      	mov	r2, r3
 8001594:	f7fe ffca 	bl	800052c <_read>
 8001598:	1c43      	adds	r3, r0, #1
 800159a:	d102      	bne.n	80015a2 <_read_r+0x1e>
 800159c:	6823      	ldr	r3, [r4, #0]
 800159e:	b103      	cbz	r3, 80015a2 <_read_r+0x1e>
 80015a0:	602b      	str	r3, [r5, #0]
 80015a2:	bd38      	pop	{r3, r4, r5, pc}
 80015a4:	200000d4 	.word	0x200000d4

080015a8 <_fstat_r>:
 80015a8:	b538      	push	{r3, r4, r5, lr}
 80015aa:	4c07      	ldr	r4, [pc, #28]	; (80015c8 <_fstat_r+0x20>)
 80015ac:	2300      	movs	r3, #0
 80015ae:	4605      	mov	r5, r0
 80015b0:	4608      	mov	r0, r1
 80015b2:	4611      	mov	r1, r2
 80015b4:	6023      	str	r3, [r4, #0]
 80015b6:	f7fe fffe 	bl	80005b6 <_fstat>
 80015ba:	1c43      	adds	r3, r0, #1
 80015bc:	d102      	bne.n	80015c4 <_fstat_r+0x1c>
 80015be:	6823      	ldr	r3, [r4, #0]
 80015c0:	b103      	cbz	r3, 80015c4 <_fstat_r+0x1c>
 80015c2:	602b      	str	r3, [r5, #0]
 80015c4:	bd38      	pop	{r3, r4, r5, pc}
 80015c6:	bf00      	nop
 80015c8:	200000d4 	.word	0x200000d4

080015cc <_isatty_r>:
 80015cc:	b538      	push	{r3, r4, r5, lr}
 80015ce:	4c06      	ldr	r4, [pc, #24]	; (80015e8 <_isatty_r+0x1c>)
 80015d0:	2300      	movs	r3, #0
 80015d2:	4605      	mov	r5, r0
 80015d4:	4608      	mov	r0, r1
 80015d6:	6023      	str	r3, [r4, #0]
 80015d8:	f7fe fffd 	bl	80005d6 <_isatty>
 80015dc:	1c43      	adds	r3, r0, #1
 80015de:	d102      	bne.n	80015e6 <_isatty_r+0x1a>
 80015e0:	6823      	ldr	r3, [r4, #0]
 80015e2:	b103      	cbz	r3, 80015e6 <_isatty_r+0x1a>
 80015e4:	602b      	str	r3, [r5, #0]
 80015e6:	bd38      	pop	{r3, r4, r5, pc}
 80015e8:	200000d4 	.word	0x200000d4

080015ec <_init>:
 80015ec:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80015ee:	bf00      	nop
 80015f0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80015f2:	bc08      	pop	{r3}
 80015f4:	469e      	mov	lr, r3
 80015f6:	4770      	bx	lr

080015f8 <_fini>:
 80015f8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80015fa:	bf00      	nop
 80015fc:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80015fe:	bc08      	pop	{r3}
 8001600:	469e      	mov	lr, r3
 8001602:	4770      	bx	lr
